"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fetchRpc = fetchRpc;
exports.fetchSingleRpc = fetchSingleRpc;
const fetch_js_1 = require("../utils/fetch.js");
const json_js_1 = require("../utils/json.js");
/**
 * @internal
 */
async function fetchRpc(rpcUrl, client, options) {
    const response = await (0, fetch_js_1.getClientFetch)(client)(rpcUrl, {
        headers: {
            ...client.config?.rpc?.fetch?.headers,
            "Content-Type": "application/json",
        },
        body: (0, json_js_1.stringify)(options.requests),
        method: "POST",
        requestTimeoutMs: options.requestTimeoutMs ?? client.config?.rpc?.fetch?.requestTimeoutMs,
        keepalive: client.config?.rpc?.fetch?.keepalive,
    });
    if (!response.ok) {
        const error = await response.text().catch(() => null);
        throw new Error(`RPC request failed with status ${response.status} - ${response.statusText}: ${error || "unknown error"}`);
    }
    return await response.json();
}
/**
 * @internal
 */
async function fetchSingleRpc(rpcUrl, client, options) {
    const response = await (0, fetch_js_1.getClientFetch)(client)(rpcUrl, {
        headers: {
            ...(client.config?.rpc?.fetch?.headers || {}),
            "Content-Type": "application/json",
        },
        body: (0, json_js_1.stringify)(options.request),
        method: "POST",
        requestTimeoutMs: options.requestTimeoutMs ?? client.config?.rpc?.fetch?.requestTimeoutMs,
        keepalive: client.config?.rpc?.fetch?.keepalive,
    });
    if (!response.ok) {
        const error = await response.text().catch(() => null);
        throw new Error(`RPC request failed with status ${response.status} - ${response.statusText}: ${error || "unknown error"}`);
    }
    return await response.json();
}
//# sourceMappingURL=fetch-rpc.js.map