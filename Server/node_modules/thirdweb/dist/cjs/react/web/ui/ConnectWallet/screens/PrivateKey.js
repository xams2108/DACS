"use strict";
"use client";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrivateKey = PrivateKey;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const domains_js_1 = require("../../../../../utils/domains.js");
const webStorage_js_1 = require("../../../../../utils/storage/webStorage.js");
const is_ecosystem_wallet_js_1 = require("../../../../../wallets/ecosystem/is-ecosystem-wallet.js");
const client_scoped_storage_js_1 = require("../../../../../wallets/in-app/core/authentication/client-scoped-storage.js");
const Spacer_js_1 = require("../../components/Spacer.js");
const Spinner_js_1 = require("../../components/Spinner.js");
const basic_js_1 = require("../../components/basic.js");
/**
 * @internal
 */
function PrivateKey(props) {
    const [isLoading, setLoading] = (0, react_1.useState)(true);
    (0, react_1.useEffect)(() => {
        const loginReady = async (e) => {
            if (typeof e.data === "object" &&
                "eventType" in e.data &&
                e.origin === baseDomain) {
                if (e.data.eventType === "exportPrivateKeyIframeLoaded") {
                    const iframe = document.getElementById(`export-wallet-${props.wallet?.id}`);
                    if (!(iframe instanceof HTMLIFrameElement)) {
                        return;
                    }
                    if (!props.wallet) {
                        return;
                    }
                    const clientStorage = new client_scoped_storage_js_1.ClientScopedStorage({
                        clientId: props.client.clientId,
                        storage: webStorage_js_1.webLocalStorage,
                        ecosystem: (0, is_ecosystem_wallet_js_1.isEcosystemWallet)(props.wallet)
                            ? {
                                id: props.wallet.id,
                                partnerId: props.wallet.getConfig()?.partnerId,
                            }
                            : undefined,
                    });
                    if (iframe?.contentWindow) {
                        iframe.contentWindow.postMessage({
                            eventType: "initExportPrivateKey",
                            authToken: await clientStorage.getAuthCookie(),
                        }, e.origin);
                    }
                }
            }
        };
        window.addEventListener("message", loginReady);
        return () => {
            window.removeEventListener("message", loginReady);
        };
    }, [props.wallet, props.client.clientId]);
    if (!props.wallet) {
        throw new Error("[PrivateKey] No wallet found");
    }
    const baseDomain = (0, domains_js_1.getThirdwebBaseUrl)("inAppWallet");
    const ecosystem = (0, is_ecosystem_wallet_js_1.isEcosystemWallet)(props.wallet)
        ? { id: props.wallet.id, partnerId: props.wallet.getConfig()?.partnerId }
        : undefined;
    return ((0, jsx_runtime_1.jsxs)(basic_js_1.Container, { style: {
            minHeight: "300px",
        }, children: [(0, jsx_runtime_1.jsx)(basic_js_1.Container, { p: "lg", children: (0, jsx_runtime_1.jsx)(basic_js_1.ModalHeader, { title: props.connectLocale.manageWallet.exportPrivateKey, onBack: props.onBack }) }), (0, jsx_runtime_1.jsx)(basic_js_1.Line, {}), (0, jsx_runtime_1.jsxs)(basic_js_1.Container, { px: "sm", scrollY: true, style: {
                    maxHeight: "500px",
                }, children: [(0, jsx_runtime_1.jsx)(Spacer_js_1.Spacer, { y: "md" }), (0, jsx_runtime_1.jsxs)(basic_js_1.Container, { style: { position: "relative", height: "250px" }, children: [isLoading ? ((0, jsx_runtime_1.jsx)(basic_js_1.Container, { center: "both", flex: "column", style: { position: "absolute", width: "100%", height: "100%" }, children: (0, jsx_runtime_1.jsx)(Spinner_js_1.Spinner, { size: "lg", color: "primaryButtonBg" }) })) : ((0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, {})), (0, jsx_runtime_1.jsx)(basic_js_1.Container, { style: {
                                    position: "absolute",
                                    height: "100%",
                                    width: "100%",
                                    zIndex: 11,
                                }, children: (0, jsx_runtime_1.jsx)("iframe", { id: `export-wallet-${props.wallet.id}`, title: "Export In-App Wallet", style: {
                                        width: "100%",
                                        height: "250px",
                                        visibility: isLoading ? "hidden" : "unset",
                                    }, onLoad: () => {
                                        setLoading(false);
                                    }, allow: "clipboard-read; clipboard-write", src: `${baseDomain}/sdk/2022-08-12/embedded-wallet/export-private-key?clientId=${props.client.clientId}&theme=${typeof props.theme === "string" ? props.theme : props.theme.type}${ecosystem ? `&ecosystemId=${ecosystem.id}` : ""}${ecosystem?.partnerId ? `&partnerId=${ecosystem.partnerId}` : ""}` }) })] }), (0, jsx_runtime_1.jsx)(Spacer_js_1.Spacer, { y: "lg" })] })] }));
}
//# sourceMappingURL=PrivateKey.js.map