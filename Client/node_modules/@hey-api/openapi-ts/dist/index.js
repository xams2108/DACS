import {createRequire}from'module';import {b,a,c,m,x,t,j as j$1,o,f as f$1,g,r,q,s,e,p as p$1,k,d,l,h,n,i}from'./chunk-AORBOYHR.js';export{u as clientDefaultConfig,v as clientPluginHandler,w as defaultPlugins}from'./chunk-AORBOYHR.js';import y from'node:fs';import R from'node:path';import p from'handlebars';createRequire(import.meta.url);
var be=b((xr,xe)=>{xe.exports=Pe;Pe.sync=ut;var Re=a("fs");function lt(e,n){var s=n.pathExt!==void 0?n.pathExt:process.env.PATHEXT;if(!s||(s=s.split(";"),s.indexOf("")!==-1))return  true;for(var r=0;r<s.length;r++){var t=s[r].toLowerCase();if(t&&e.substr(-t.length).toLowerCase()===t)return  true}return  false}function ve(e,n,s){return !e.isSymbolicLink()&&!e.isFile()?false:lt(n,s)}function Pe(e,n,s){Re.stat(e,function(r,t){s(r,r?false:ve(t,e,n));});}function ut(e,n){return ve(Re.statSync(e),e,n)}});var Oe=b((br,Te)=>{Te.exports=Ce;Ce.sync=pt;var qe=a("fs");function Ce(e,n,s){qe.stat(e,function(r,t){s(r,r?false:Ae(t,n));});}function pt(e,n){return Ae(qe.statSync(e),n)}function Ae(e,n){return e.isFile()&&ct(e,n)}function ct(e,n){var s=e.mode,r=e.uid,t=e.gid,o=n.uid!==void 0?n.uid:process.getuid&&process.getuid(),a=n.gid!==void 0?n.gid:process.getgid&&process.getgid(),i=parseInt("100",8),u=parseInt("010",8),l=parseInt("001",8),c=i|u,m=s&l||s&u&&t===a||s&i&&r===o||s&c&&o===0;return m}});var we=b((Cr,ke)=>{a("fs");var $;process.platform==="win32"||global.TESTING_WINDOWS?$=be():$=Oe();ke.exports=L;L.sync=mt;function L(e,n,s){if(typeof n=="function"&&(s=n,n={}),!s){if(typeof Promise!="function")throw new TypeError("callback not provided");return new Promise(function(r,t){L(e,n||{},function(o,a){o?t(o):r(a);});})}$(e,n||{},function(r,t){r&&(r.code==="EACCES"||n&&n.ignoreErrors)&&(r=null,t=false),s(r,t);});}function mt(e,n){try{return $.sync(e,n||{})}catch(s){if(n&&n.ignoreErrors||s.code==="EACCES")return  false;throw s}}});var $e=b((Ar,Be)=>{var O=process.platform==="win32"||process.env.OSTYPE==="cygwin"||process.env.OSTYPE==="msys",Ee=a("path"),ft=O?";":":",Se=we(),He=e=>Object.assign(new Error(`not found: ${e}`),{code:"ENOENT"}),De=(e,n)=>{let s=n.colon||ft,r=e.match(/\//)||O&&e.match(/\\/)?[""]:[...O?[process.cwd()]:[],...(n.path||process.env.PATH||"").split(s)],t=O?n.pathExt||process.env.PATHEXT||".EXE;.CMD;.BAT;.COM":"",o=O?t.split(s):[""];return O&&e.indexOf(".")!==-1&&o[0]!==""&&o.unshift(""),{pathEnv:r,pathExt:o,pathExtExe:t}},Ie=(e,n,s)=>{typeof n=="function"&&(s=n,n={}),n||(n={});let{pathEnv:r,pathExt:t,pathExtExe:o}=De(e,n),a=[],i=l=>new Promise((c,m)=>{if(l===r.length)return n.all&&a.length?c(a):m(He(e));let d=r[l],C=/^".*"$/.test(d)?d.slice(1,-1):d,b=Ee.join(C,e),T=!C&&/^\.[\\\/]/.test(e)?e.slice(0,2)+b:b;c(u(T,l,0));}),u=(l,c,m)=>new Promise((d,C)=>{if(m===t.length)return d(i(c+1));let b=t[m];Se(l+b,{pathExt:o},(T,w)=>{if(!T&&w)if(n.all)a.push(l+b);else return d(l+b);return d(u(l,c,m+1))});});return s?i(0).then(l=>s(null,l),s):i(0)},dt=(e,n)=>{n=n||{};let{pathEnv:s,pathExt:r,pathExtExe:t}=De(e,n),o=[];for(let a=0;a<s.length;a++){let i=s[a],u=/^".*"$/.test(i)?i.slice(1,-1):i,l=Ee.join(u,e),c=!u&&/^\.[\\\/]/.test(e)?e.slice(0,2)+l:l;for(let m=0;m<r.length;m++){let d=c+r[m];try{if(Se.sync(d,{pathExt:t}))if(n.all)o.push(d);else return d}catch{}}}if(n.all&&o.length)return o;if(n.nothrow)return null;throw He(e)};Be.exports=Ie;Ie.sync=dt;});var Ne=b((Tr,W)=>{var je=(e={})=>{let n=e.env||process.env;return (e.platform||process.platform)!=="win32"?"PATH":Object.keys(n).reverse().find(r=>r.toUpperCase()==="PATH")||"Path"};W.exports=je;W.exports.default=je;});var We=b((Or,Le)=>{var _e=a("path"),gt=$e(),ht=Ne();function Fe(e,n){let s=e.options.env||process.env,r=process.cwd(),t=e.options.cwd!=null,o=t&&process.chdir!==void 0&&!process.chdir.disabled;if(o)try{process.chdir(e.options.cwd);}catch{}let a;try{a=gt.sync(e.command,{path:s[ht({env:s})],pathExt:n?_e.delimiter:void 0});}catch{}finally{o&&process.chdir(r);}return a&&(a=_e.resolve(t?e.options.cwd:"",a)),a}function yt(e){return Fe(e)||Fe(e,true)}Le.exports=yt;});var Me=b((kr,U)=>{var M=/([()\][%!^"`<>&|;, *?])/g;function Rt(e){return e=e.replace(M,"^$1"),e}function vt(e,n){return e=`${e}`,e=e.replace(/(?=(\\+?)?)\1"/g,'$1$1\\"'),e=e.replace(/(?=(\\+?)?)\1$/,"$1$1"),e=`"${e}"`,e=e.replace(M,"^$1"),n&&(e=e.replace(M,"^$1")),e}U.exports.command=Rt;U.exports.argument=vt;});var Ve=b((wr,Ue)=>{Ue.exports=/^#!(.*)/;});var ze=b((Er,Ge)=>{var Pt=Ve();Ge.exports=(e="")=>{let n=e.match(Pt);if(!n)return null;let[s,r]=n[0].replace(/#! ?/,"").split(" "),t=s.split("/").pop();return t==="env"?r:r?`${t} ${r}`:t};});var Qe=b((Sr,Ke)=>{var V=a("fs"),xt=ze();function bt(e){let s=Buffer.alloc(150),r;try{r=V.openSync(e,"r"),V.readSync(r,s,0,150,0),V.closeSync(r);}catch{}return xt(s.toString())}Ke.exports=bt;});var Ze=b((Hr,Ye)=>{var qt=a("path"),Je=We(),Xe=Me(),Ct=Qe(),At=process.platform==="win32",Tt=/\.(?:com|exe)$/i,Ot=/node_modules[\\/].bin[\\/][^\\/]+\.cmd$/i;function kt(e){e.file=Je(e);let n=e.file&&Ct(e.file);return n?(e.args.unshift(e.file),e.command=n,Je(e)):e.file}function wt(e){if(!At)return e;let n=kt(e),s=!Tt.test(n);if(e.options.forceShell||s){let r=Ot.test(n);e.command=qt.normalize(e.command),e.command=Xe.command(e.command),e.args=e.args.map(o=>Xe.argument(o,r));let t=[e.command].concat(e.args).join(" ");e.args=["/d","/s","/c",`"${t}"`],e.command=process.env.comspec||"cmd.exe",e.options.windowsVerbatimArguments=true;}return e}function Et(e,n,s){n&&!Array.isArray(n)&&(s=n,n=null),n=n?n.slice(0):[],s=Object.assign({},s);let r={command:e,args:n,options:s,file:void 0,original:{command:e,args:n}};return s.shell?r:wt(r)}Ye.exports=Et;});var tn=b((Dr,nn)=>{var G=process.platform==="win32";function z(e,n){return Object.assign(new Error(`${n} ${e.command} ENOENT`),{code:"ENOENT",errno:"ENOENT",syscall:`${n} ${e.command}`,path:e.command,spawnargs:e.args})}function St(e,n){if(!G)return;let s=e.emit;e.emit=function(r,t){if(r==="exit"){let o=en(t,n);if(o)return s.call(e,"error",o)}return s.apply(e,arguments)};}function en(e,n){return G&&e===1&&!n.file?z(n.original,"spawn"):null}function Ht(e,n){return G&&e===1&&!n.file?z(n.original,"spawnSync"):null}nn.exports={hookChildProcess:St,verifyENOENT:en,verifyENOENTSync:Ht,notFoundError:z};});var sn=b((Ir,k)=>{var rn=a("child_process"),K=Ze(),Q=tn();function on(e,n,s){let r=K(e,n,s),t=rn.spawn(r.command,r.args,r.options);return Q.hookChildProcess(t,r),t}function Dt(e,n,s){let r=K(e,n,s),t=rn.spawnSync(r.command,r.args,r.options);return t.error=t.error||Q.verifyENOENTSync(t.status,r),t}k.exports=on;k.exports.spawn=on;k.exports.sync=Dt;k.exports._parse=K;k.exports._enoent=Q;});var me=async({context:e})=>{await e.broadcast("before");for(let n of e.ir.servers??[])await e.broadcast("server",{server:n});if(e.ir.components){for(let n in e.ir.components.schemas){let s=e.ir.components.schemas[n],r=`#/components/schemas/${n}`;await e.broadcast("schema",{$ref:r,name:n,schema:s});}for(let n in e.ir.components.parameters){let s=e.ir.components.parameters[n],r=`#/components/parameters/${n}`;await e.broadcast("parameter",{$ref:r,name:n,parameter:s});}for(let n in e.ir.components.requestBodies){let s=e.ir.components.requestBodies[n],r=`#/components/requestBodies/${n}`;await e.broadcast("requestBody",{$ref:r,name:n,requestBody:s});}}for(let n in e.ir.paths){let s=e.ir.paths[n];for(let r in s){let t=r,o=s[t];await e.broadcast("operation",{method:t,operation:o,path:n});}}await e.broadcast("after");};var I=e=>{switch(e){case "legacy/angular":return "AngularHttpRequest";case "legacy/axios":return "AxiosHttpRequest";case "legacy/fetch":return "FetchHttpRequest";case "legacy/node":return "NodeHttpRequest";case "legacy/xhr":return "XHRHttpRequest";default:return ""}};var fe=async(e$1,n,s,r)=>{let t=e(),o=d(t),a=r.client({$config:t,...s,httpRequest:I(o.name),models:i(s.models),services:i(s.services)});g(t)&&(j$1(n),y.writeFileSync(R.resolve(n,`${g(t)}.ts`),a));};var de=async(e$1,n,s)=>{let r=e();if(r.exportCore){let t=d(r),o={httpRequest:I(t.name),server:r.base!==void 0?r.base:n.server,version:n.version};if(y.rmSync(R.resolve(e$1),{force:true,recursive:true}),y.mkdirSync(R.resolve(e$1),{recursive:true}),await y.writeFileSync(R.resolve(e$1,"OpenAPI.ts"),s.core.settings({$config:r,...o})),await y.writeFileSync(R.resolve(e$1,"ApiError.ts"),s.core.apiError({$config:r,...o})),await y.writeFileSync(R.resolve(e$1,"ApiRequestOptions.ts"),s.core.apiRequestOptions({$config:r,...o})),await y.writeFileSync(R.resolve(e$1,"ApiResult.ts"),s.core.apiResult({$config:r,...o})),t.name!=="legacy/angular"&&await y.writeFileSync(R.resolve(e$1,"CancelablePromise.ts"),s.core.cancelablePromise({$config:r,...o})),await y.writeFileSync(R.resolve(e$1,"request.ts"),s.core.request({$config:r,...o})),g(r)&&(await y.writeFileSync(R.resolve(e$1,"BaseHttpRequest.ts"),s.core.baseHttpRequest({$config:r,...o})),await y.writeFileSync(R.resolve(e$1,`${o.httpRequest}.ts`),s.core.httpRequest({$config:r,...o}))),r.request){let a=R.resolve(process.cwd(),r.request);if(!await y.existsSync(a))throw new Error(`Custom request file "${a}" does not exists`);await y.copyFileSync(a,R.resolve(e$1,"request.ts"));}}};var ge=({files:e$1})=>{let n$1=e();e$1.index=new n({dir:n$1.output.path,id:"index",name:"index.ts"}),g(n$1)&&e$1.index.add(h.exportNamedDeclaration({exports:g(n$1),module:`./${g(n$1)}`})),n$1.exportCore&&(e$1.index.add(h.exportNamedDeclaration({exports:"ApiError",module:"./core/ApiError"})),n$1.plugins["@hey-api/sdk"]?.response==="response"&&e$1.index.add(h.exportNamedDeclaration({exports:{asType:true,name:"ApiResult"},module:"./core/ApiResult"})),g(n$1)&&e$1.index.add(h.exportNamedDeclaration({exports:"BaseHttpRequest",module:"./core/BaseHttpRequest"})),d(n$1).name!=="legacy/angular"&&e$1.index.add(h.exportNamedDeclaration({exports:["CancelablePromise","CancelError"],module:"./core/CancelablePromise"})),e$1.index.add(h.exportNamedDeclaration({exports:["OpenAPI",{asType:true,name:"OpenAPIConfig"}],module:"./core/OpenAPI"}))),Object.keys(e$1).sort().forEach(s=>{let r=e$1[s];s==="index"||r.isEmpty()||["sdk","types"].includes(s)&&e$1.index.add(h.exportAllDeclaration({module:`./${r.nameWithoutExtension()}`}));});};var he=async({client:e$1,openApi:n$1,templates:s})=>{let r=e(),t=n$1;if(e$1){if(r.plugins["@hey-api/sdk"]?.include&&r.plugins["@hey-api/sdk"].asClass){let u=new RegExp(r.plugins["@hey-api/sdk"].include);e$1.services=e$1.services.filter(l=>u.test(l.name));}if(r.plugins["@hey-api/typescript"]?.include){let u=new RegExp(r.plugins["@hey-api/typescript"].include);e$1.models=e$1.models.filter(l=>u.test(l.name));}}let o=R.resolve(r.output.path);r.output.clean&&k(o);let a=d(r);!f$1(r)&&"bundle"in a&&a.bundle&&l({outputPath:o,plugin:a}),await fe(t,o,e$1,s),await de(R.resolve(r.output.path,"core"),e$1,s);let i={};for(let u of r.pluginOrder){let l=r.plugins[u],c=(l.output??"").split("/"),m=R.resolve(r.output.path,...c.slice(0,c.length-1));i[l.name]=new n({dir:m,id:`legacy-unused-${l.name}`,name:`${c[c.length-1]}.ts`}),l._handlerLegacy({client:e$1,files:i,openApi:t,plugin:l});}ge({files:i}),Object.entries(i).forEach(([u,l])=>{r.dryRun||(u==="index"?l.write():l.write(`

`));});},ye=async({context:e})=>{let n=R.resolve(e.config.output.path);e.config.output.clean&&k(n);let s=d(e.config);"bundle"in s&&s.bundle&&l({outputPath:n,plugin:s});for(let r of e.config.pluginOrder){let t=e.config.plugins[r];t._handler({context:e,plugin:t});}if(await me({context:e}),!e.config.dryRun){let r=e.createFile({id:"_index",path:"index"});for(let t of Object.values(e.files))t.nameWithoutExtension()!==r.nameWithoutExtension()&&(!t.isEmpty()&&t.exportFromIndex&&e.config.output.indexFile&&r.add(h.exportAllDeclaration({module:r.relativePathToFile({context:e,id:t.id})})),t.write(`

`));e.config.output.indexFile&&r.write();}};var J=c(sn(),1),It={biome:{args:e=>["format","--write",e],command:"biome",name:"Biome (Format)"},prettier:{args:e=>["--ignore-unknown",e,"--write","--ignore-path","./.prettierignore"],command:"prettier",name:"Prettier"}},Bt={biome:{args:e=>["lint","--apply",e],command:"biome",name:"Biome (Lint)"},eslint:{args:e=>[e,"--fix"],command:"eslint",name:"ESLint"},oxlint:{args:e=>["--fix",e],command:"oxlint",name:"oxlint"}},an=({config:e})=>{if(e.output.format){let n=It[e.output.format];console.log(`\u2728 Running ${n.name}`),(0, J.sync)(n.command,n.args(e.output.path));}if(e.output.lint){let n=Bt[e.output.lint];console.log(`\u2728 Running ${n.name}`),(0, J.sync)(n.command,n.args(e.output.path));}};var ln=e=>`${e}-end`,X=e=>`${e}-length`,un=e=>`${e}-start`,f={clear:()=>{performance.clearMarks(),performance.clearMeasures();},end:e=>performance.mark(ln(e)),getEntriesByName:e=>performance.getEntriesByName(X(e)),measure:e=>performance.measure(X(e),un(e),ln(e)),start:e=>performance.mark(un(e))},j=class{totalMeasure;constructor({totalMark:n}){this.totalMeasure=f.measure(n);}report({marks:n}){let s=Math.ceil(this.totalMeasure.duration*100)/100,r=this.totalMeasure.name;console.warn(`${r.substring(0,r.length-X("").length)}: ${s.toFixed(2)}ms`),n.forEach(t=>{try{let o=f.measure(t),a=Math.ceil(o.duration*100)/100,i=Math.ceil(o.duration/this.totalMeasure.duration*100*100)/100;console.warn(`${t}: ${a.toFixed(2)}ms (${i.toFixed(2)}%)`);}catch{}});}};var Y=e=>e.startsWith("https://get.heyapi.dev"),jt=e=>{let n={path:""};if(e.path&&(typeof e.path!="string"||!Y(e.path)))return n.path=e.path,n;let[s,r]=e.path.split("?"),o=(r||"").split("&").map(v=>v.split("=")),a=s||"";a.endsWith("/")&&(a=a.slice(0,a.length-1));let[,i]=a.split("://"),[u,l,c]=(i||"").split("/");n.organization=l||e.organization,n.project=c||e.project;let m=[],d="api_key";n.api_key=o.find(([v])=>v===d)?.[1]||e.api_key||process.env.HEY_API_TOKEN,n.api_key&&m.push(`${d}=${n.api_key}`);let C="branch";n.branch=o.find(([v])=>v===C)?.[1]||e.branch,n.branch&&m.push(`${C}=${n.branch}`);let b="commit_sha";n.commit_sha=o.find(([v])=>v===b)?.[1]||e.commit_sha,n.commit_sha&&m.push(`${b}=${n.commit_sha}`);let T="tags";n.tags=o.find(([v])=>v===T)?.[1]?.split(",")||e.tags,n.tags?.length&&m.push(`${T}=${n.tags.join(",")}`);let w="version";if(n.version=o.find(([v])=>v===w)?.[1]||e.version,n.version&&m.push(`${w}=${n.version}`),!n.organization)throw new Error("\u{1F6AB} missing organization - from which Hey API platform organization do you want to generate your output?");if(!n.project)throw new Error("\u{1F6AB} missing project - from which Hey API platform project do you want to generate your output?");let ee=m.join("&"),ne=u||"get.heyapi.dev",te=ne.startsWith("localhost"),re=[te?"http":"https",ne].join("://"),oe=te?[re,"v1","get",n.organization,n.project].join("/"):[re,n.organization,n.project].join("/");return n.path=ee?`${oe}?${ee}`:oe,n},Nt=({config:e,inputPath:n,watch:s})=>{if(e.logs.level==="silent")return;s&&console.clear();let r=s?"Input changed, generating from":"Generating from";if(typeof n.path=="string"){let t=Y(n.path)?`${n.organization}/${n.project}`:n.path;console.log(`\u23F3 ${r} ${t}`),Y(n.path)&&(n.branch&&console.log(`branch: ${n.branch}`),n.commit_sha&&console.log(`commit: ${n.commit_sha}`),n.tags?.length&&console.log(`tags: ${n.tags.join(", ")}`),n.version&&console.log(`version: ${n.version}`));}else console.log(`\u23F3 ${r} raw OpenAPI specification`);},Z=async({config:e,templates:n,watch:s$1})=>{let r$1=jt(e.input),t=e.watch.timeout,o$1=s$1||{headers:new Headers};Nt({config:e,inputPath:r$1,watch:!!s$1}),f.start("spec");let{data:a,error:i,response:u}=await o({fetchOptions:e.input.fetch,inputPath:r$1.path,timeout:t,watch:o$1});if(f.end("spec"),i&&!s$1)throw new Error(`Request failed with status ${u.status}: ${u.statusText}`);let l,c;if(a){if(f.start("parser"),e.experimentalParser&&!f$1(e)&&!g(e)&&(c=r({config:e,spec:a})),!c){let m=q({openApi:a});l=s(m,e);}if(f.end("parser"),f.start("generator"),c?await ye({context:c}):l&&await he({client:l,openApi:a,templates:n}),f.end("generator"),f.start("postprocess"),!e.dryRun&&(an({config:e}),e.logs.level!=="silent")){let m=process.env.INIT_CWD?`./${R.relative(process.env.INIT_CWD,e.output.path)}`:e.output.path;console.log(`\u{1F680} Done! Your output is in ${m}`);}f.end("postprocess");}return e.watch.enabled&&typeof r$1.path=="string"&&setTimeout(()=>{Z({config:e,templates:n,watch:o$1});},e.watch.interval),c||l};var pn={1:function(e,n,s,r,t){return `import { NgModule} from '@angular/core';
import { HttpClientModule } from '@angular/common/http';

import { AngularHttpRequest } from './core/AngularHttpRequest';
import { BaseHttpRequest } from './core/BaseHttpRequest';
import type { OpenAPIConfig } from './core/OpenAPI';
import { OpenAPI } from './core/OpenAPI';
import { Interceptors } from './core/OpenAPI';
`},3:function(e,n,s,r,t){var o,a=e.strict,i=e.lambda;return `import type { BaseHttpRequest } from './core/BaseHttpRequest';
import type { OpenAPIConfig } from './core/OpenAPI';
import { Interceptors } from './core/OpenAPI';
import { `+((o=i(a(n,"httpRequest",{start:{line:14,column:12},end:{line:14,column:23}}),n))!=null?o:"")+" } from './core/"+((o=i(a(n,"httpRequest",{start:{line:14,column:45},end:{line:14,column:56}}),n))!=null?o:"")+`';
`},5:function(e,n,s,r,t){var o,a=e.lookupProperty||function(i,u){if(Object.prototype.hasOwnProperty.call(i,u))return i[u]};return (o=a(s,"each").call(n??(e.nullContext||{}),a(n,"services"),{name:"each",hash:{},fn:e.program(6,t,0),inverse:e.noop,data:t,loc:{start:{line:18,column:0},end:{line:20,column:9}}}))!=null?o:""},6:function(e,n,s,r,t){var o,a=e.lookupProperty||function(i,u){if(Object.prototype.hasOwnProperty.call(i,u))return i[u]};return "import { "+((o=a(s,"transformServiceName").call(n??(e.nullContext||{}),a(n,"name"),{name:"transformServiceName",hash:{},data:t,loc:{start:{line:19,column:9},end:{line:19,column:40}}}))!=null?o:"")+` } from './sdk.gen';
`},8:function(e,n,s,r,t){var o,a=e.strict,i=e.lambda,u=e.lookupProperty||function(l,c){if(Object.prototype.hasOwnProperty.call(l,c))return l[c]};return `@NgModule({
	imports: [HttpClientModule],
	providers: [
		{
			provide: OpenAPI,
			useValue: {
				BASE: OpenAPI?.BASE ?? '`+((o=i(a(n,"server",{start:{line:30,column:31},end:{line:30,column:37}}),n))!=null?o:"")+`',
				VERSION: OpenAPI?.VERSION ?? '`+((o=i(a(n,"version",{start:{line:31,column:37},end:{line:31,column:44}}),n))!=null?o:"")+`',
				WITH_CREDENTIALS: OpenAPI?.WITH_CREDENTIALS ?? false,
				CREDENTIALS: OpenAPI?.CREDENTIALS ?? 'include',
				TOKEN: OpenAPI?.TOKEN,
				USERNAME: OpenAPI?.USERNAME,
				PASSWORD: OpenAPI?.PASSWORD,
				HEADERS: OpenAPI?.HEADERS,
				ENCODE_PATH: OpenAPI?.ENCODE_PATH,
				interceptors: {
					response: OpenAPI?.interceptors?.response ?? new Interceptors(),
				},
			} as OpenAPIConfig,
		},
		{
			provide: BaseHttpRequest,
			useClass: AngularHttpRequest,
		},
`+((o=u(s,"each").call(n??(e.nullContext||{}),u(n,"services"),{name:"each",hash:{},fn:e.program(9,t,0),inverse:e.noop,data:t,loc:{start:{line:48,column:2},end:{line:50,column:11}}}))!=null?o:"")+`	]
})
export class `+((o=i(a(u(u(t,"root"),"$config"),"name",{start:{line:53,column:16},end:{line:53,column:34}}),n))!=null?o:"")+` {}
`},9:function(e,n,s,r,t){var o,a=e.lookupProperty||function(i,u){if(Object.prototype.hasOwnProperty.call(i,u))return i[u]};return "		"+((o=a(s,"transformServiceName").call(n??(e.nullContext||{}),a(n,"name"),{name:"transformServiceName",hash:{},data:t,loc:{start:{line:49,column:2},end:{line:49,column:33}}}))!=null?o:"")+`,
`},11:function(e,n,s,r,t){var o,a=e.strict,i=e.lambda,u=n??(e.nullContext||{}),l=e.lookupProperty||function(c,m){if(Object.prototype.hasOwnProperty.call(c,m))return c[m]};return `type HttpRequestConstructor = new (config: OpenAPIConfig) => BaseHttpRequest;

export class `+((o=i(a(l(l(t,"root"),"$config"),"name",{start:{line:57,column:16},end:{line:57,column:34}}),n))!=null?o:"")+` {

`+((o=l(s,"each").call(u,l(n,"services"),{name:"each",hash:{},fn:e.program(12,t,0),inverse:e.noop,data:t,loc:{start:{line:59,column:1},end:{line:61,column:10}}}))!=null?o:"")+`
	public readonly request: BaseHttpRequest;

	constructor(config?: Partial<OpenAPIConfig>, HttpRequest: HttpRequestConstructor = `+((o=i(a(n,"httpRequest",{start:{line:65,column:87},end:{line:65,column:98}}),n))!=null?o:"")+`) {
		this.request = new HttpRequest({
			BASE: config?.BASE ?? '`+((o=i(a(n,"server",{start:{line:67,column:29},end:{line:67,column:35}}),n))!=null?o:"")+`',
			VERSION: config?.VERSION ?? '`+((o=i(a(n,"version",{start:{line:68,column:35},end:{line:68,column:42}}),n))!=null?o:"")+`',
			WITH_CREDENTIALS: config?.WITH_CREDENTIALS ?? false,
			CREDENTIALS: config?.CREDENTIALS ?? 'include',
			TOKEN: config?.TOKEN,
			USERNAME: config?.USERNAME,
			PASSWORD: config?.PASSWORD,
			HEADERS: config?.HEADERS,
			ENCODE_PATH: config?.ENCODE_PATH,
			interceptors: {
				request: config?.interceptors?.request ?? new Interceptors(),
				response: config?.interceptors?.response ?? new Interceptors(),
      },
		});

`+((o=l(s,"each").call(u,l(n,"services"),{name:"each",hash:{},fn:e.program(14,t,0),inverse:e.noop,data:t,loc:{start:{line:82,column:2},end:{line:84,column:11}}}))!=null?o:"")+`	}
}
`},12:function(e,n,s,r,t){var o,a=n??(e.nullContext||{}),i=e.lookupProperty||function(u,l){if(Object.prototype.hasOwnProperty.call(u,l))return u[l]};return "	public readonly "+((o=i(s,"camelCase").call(a,i(n,"name"),{name:"camelCase",hash:{},data:t,loc:{start:{line:60,column:17},end:{line:60,column:37}}}))!=null?o:"")+": "+((o=i(s,"transformServiceName").call(a,i(n,"name"),{name:"transformServiceName",hash:{},data:t,loc:{start:{line:60,column:39},end:{line:60,column:70}}}))!=null?o:"")+`;
`},14:function(e,n,s,r,t){var o,a=n??(e.nullContext||{}),i=e.lookupProperty||function(u,l){if(Object.prototype.hasOwnProperty.call(u,l))return u[l]};return "		this."+((o=i(s,"camelCase").call(a,i(n,"name"),{name:"camelCase",hash:{},data:t,loc:{start:{line:83,column:7},end:{line:83,column:27}}}))!=null?o:"")+" = new "+((o=i(s,"transformServiceName").call(a,i(n,"name"),{name:"transformServiceName",hash:{},data:t,loc:{start:{line:83,column:34},end:{line:83,column:65}}}))!=null?o:"")+`(this.request);
`},compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){var o,a=n??(e.nullContext||{}),i=e.lookupProperty||function(u,l){if(Object.prototype.hasOwnProperty.call(u,l))return u[l]};return ((o=i(s,"equals").call(a,i(i(i(i(t,"root"),"$config"),"client"),"name"),"legacy/angular",{name:"equals",hash:{},fn:e.program(1,t,0),inverse:e.program(3,t,0),data:t,loc:{start:{line:1,column:0},end:{line:15,column:11}}}))!=null?o:"")+`
`+((o=i(s,"if").call(a,i(n,"services"),{name:"if",hash:{},fn:e.program(5,t,0),inverse:e.noop,data:t,loc:{start:{line:17,column:0},end:{line:21,column:7}}}))!=null?o:"")+`
`+((o=i(s,"equals").call(a,i(i(i(i(t,"root"),"$config"),"client"),"name"),"legacy/angular",{name:"equals",hash:{},fn:e.program(8,t,0),inverse:e.program(11,t,0),data:t,loc:{start:{line:23,column:0},end:{line:87,column:11}}}))!=null?o:"")},useData:true};var cn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const getHeaders = <T>(config: OpenAPIConfig, options: ApiRequestOptions<T>): Observable<HttpHeaders> => {
	return forkJoin({
		// @ts-ignore
		token: resolve(options, config.TOKEN),
		// @ts-ignore
		username: resolve(options, config.USERNAME),
		// @ts-ignore
		password: resolve(options, config.PASSWORD),
		// @ts-ignore
		additionalHeaders: resolve(options, config.HEADERS),
	}).pipe(
		map(({ token, username, password, additionalHeaders }) => {
			const headers = Object.entries({
				Accept: 'application/json',
				...additionalHeaders,
				...options.headers,
			})
				.filter(([, value]) => value !== undefined && value !== null)
				.reduce((headers, [key, value]) => ({
					...headers,
					[key]: String(value),
				}), {} as Record<string, string>);

			if (isStringWithValue(token)) {
				headers['Authorization'] = \`Bearer \${token}\`;
			}

			if (isStringWithValue(username) && isStringWithValue(password)) {
				const credentials = base64(\`\${username}:\${password}\`);
				headers['Authorization'] = \`Basic \${credentials}\`;
			}

			if (options.body !== undefined) {
				if (options.mediaType) {
					headers['Content-Type'] = options.mediaType;
				} else if (isBlob(options.body)) {
					headers['Content-Type'] = options.body.type || 'application/octet-stream';
				} else if (isString(options.body)) {
					headers['Content-Type'] = 'text/plain';
				} else if (!isFormData(options.body)) {
					headers['Content-Type'] = 'application/json';
				}
			}

			return new HttpHeaders(headers);
		}),
	);
};`},useData:true};var mn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const getRequestBody = (options: ApiRequestOptions): unknown => {
	if (options.body) {
		if (options.mediaType?.includes('application/json') || options.mediaType?.includes('+json')) {
			return JSON.stringify(options.body);
		} else if (isString(options.body) || isBlob(options.body) || isFormData(options.body)) {
			return options.body;
		} else {
			return JSON.stringify(options.body);
		}
	}
	return undefined;
};`},useData:true};var fn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const getResponseBody = <T>(response: HttpResponse<T>): T | undefined => {
	if (response.status !== 204 && response.body !== null) {
		return response.body;
	}
	return undefined;
};`},useData:true};var dn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const getResponseHeader = <T>(response: HttpResponse<T>, responseHeader?: string): string | undefined => {
	if (responseHeader) {
		const value = response.headers.get(responseHeader);
		if (isString(value)) {
			return value;
		}
	}
	return undefined;
};`},useData:true};var gn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){var o,a=e.lookupProperty||function(i,u){if(Object.prototype.hasOwnProperty.call(i,u))return i[u]};return `import { HttpClient, HttpHeaders } from '@angular/common/http';
import type { HttpResponse, HttpErrorResponse } from '@angular/common/http';
import { forkJoin, of, throwError } from 'rxjs';
import { catchError, map, switchMap } from 'rxjs/operators';
import type { Observable } from 'rxjs';

import { ApiError } from './ApiError';
import type { ApiRequestOptions } from './ApiRequestOptions';
import type { ApiResult } from './ApiResult';
import type { OpenAPIConfig } from './OpenAPI';

`+((o=e.invokePartial(a(r,"functions/isString"),n,{name:"functions/isString",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(a(r,"functions/isStringWithValue"),n,{name:"functions/isStringWithValue",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(a(r,"functions/isBlob"),n,{name:"functions/isBlob",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(a(r,"functions/isFormData"),n,{name:"functions/isFormData",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(a(r,"functions/base64"),n,{name:"functions/base64",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(a(r,"functions/getQueryString"),n,{name:"functions/getQueryString",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(a(r,"functions/getUrl"),n,{name:"functions/getUrl",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(a(r,"functions/getFormData"),n,{name:"functions/getFormData",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(a(r,"functions/resolve"),n,{name:"functions/resolve",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(a(r,"angular/getHeaders"),n,{name:"angular/getHeaders",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(a(r,"angular/getRequestBody"),n,{name:"angular/getRequestBody",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(a(r,"angular/sendRequest"),n,{name:"angular/sendRequest",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(a(r,"angular/getResponseHeader"),n,{name:"angular/getResponseHeader",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(a(r,"angular/getResponseBody"),n,{name:"angular/getResponseBody",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(a(r,"functions/catchErrorCodes"),n,{name:"functions/catchErrorCodes",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

/**
 * Request method
 * @param config The OpenAPI configuration object
 * @param http The Angular HTTP client
 * @param options The request options from the service
 * @returns Observable<T>
 * @throws ApiError
 */
export const request = <T>(config: OpenAPIConfig, http: HttpClient, options: ApiRequestOptions<T>): Observable<T> => {
	const url = getUrl(config, options);
	const formData = getFormData(options);
	const body = getRequestBody(options);

	return getHeaders(config, options).pipe(
		switchMap(headers => {
			return sendRequest<T>(config, options, http, url, body, formData, headers);
		}),
		switchMap(async response => {
			for (const fn of config.interceptors.response._fns) {
				response = await fn(response);
			}
			const responseBody = getResponseBody(response);
			const responseHeader = getResponseHeader(response, options.responseHeader);

			let transformedBody = responseBody;
			if (options.responseTransformer && response.ok) {
				transformedBody = await options.responseTransformer(responseBody)
			}

			return {
				url,
				ok: response.ok,
				status: response.status,
				statusText: response.statusText,
				body: responseHeader ?? transformedBody,
			} as ApiResult;
		}),
		catchError((error: HttpErrorResponse) => {
			if (!error.status) {
				return throwError(() => error);
			}
			return of({
				url,
				ok: error.ok,
				status: error.status,
				statusText: error.statusText,
				body: error.error ?? error.statusText,
			} as ApiResult);
		}),
		map(result => {
			catchErrorCodes(options, result);
			return result.body as T;
		}),
		catchError((error: ApiError) => {
			return throwError(() => error);
		}),
	);
};`},usePartial:true,useData:true};var hn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const sendRequest = <T>(
	config: OpenAPIConfig,
	options: ApiRequestOptions<T>,
	http: HttpClient,
	url: string,
	body: unknown,
	formData: FormData | undefined,
	headers: HttpHeaders
): Observable<HttpResponse<T>> => {
	return http.request<T>(options.method, url, {
		headers,
		body: body ?? formData,
		withCredentials: config.WITH_CREDENTIALS,
		observe: 'response',
	});
};`},useData:true};var yn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `import type { ApiRequestOptions } from './ApiRequestOptions';
import type { ApiResult } from './ApiResult';

export class ApiError extends Error {
	public readonly url: string;
	public readonly status: number;
	public readonly statusText: string;
	public readonly body: unknown;
	public readonly request: ApiRequestOptions;

	constructor(request: ApiRequestOptions, response: ApiResult, message: string) {
		super(message);

		this.name = 'ApiError';
		this.url = response.url;
		this.status = response.status;
		this.statusText = response.statusText;
		this.body = response.body;
		this.request = request;
	}
}`},useData:true};var Rn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export type ApiRequestOptions<T = unknown> = {
	readonly body?: any;
	readonly cookies?: Record<string, unknown>;
	readonly errors?: Record<number | string, string>;
	readonly formData?: Record<string, unknown> | any[] | Blob | File;
	readonly headers?: Record<string, unknown>;
	readonly mediaType?: string;
	readonly method:
		| 'DELETE'
		| 'GET'
		| 'HEAD'
		| 'OPTIONS'
		| 'PATCH'
		| 'POST'
		| 'PUT';
	readonly path?: Record<string, unknown>;
	readonly query?: Record<string, unknown>;
	readonly responseHeader?: string;
	readonly responseTransformer?: (data: unknown) => Promise<T>;
	readonly url: string;
};`},useData:true};var vn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export type ApiResult<TData = any> = {
	readonly body: TData;
	readonly ok: boolean;
	readonly status: number;
	readonly statusText: string;
	readonly url: string;
};`},useData:true};var Pn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const getHeaders = async <T>(config: OpenAPIConfig, options: ApiRequestOptions<T>): Promise<Record<string, string>> => {
	const [token, username, password, additionalHeaders] = await Promise.all([
		// @ts-ignore
		resolve(options, config.TOKEN),
		// @ts-ignore
		resolve(options, config.USERNAME),
		// @ts-ignore
		resolve(options, config.PASSWORD),
		// @ts-ignore
		resolve(options, config.HEADERS),
	]);

	const headers = Object.entries({
		Accept: 'application/json',
		...additionalHeaders,
		...options.headers,
	})
	.filter(([, value]) => value !== undefined && value !== null)
	.reduce((headers, [key, value]) => ({
		...headers,
		[key]: String(value),
	}), {} as Record<string, string>);

	if (isStringWithValue(token)) {
		headers['Authorization'] = \`Bearer \${token}\`;
	}

	if (isStringWithValue(username) && isStringWithValue(password)) {
		const credentials = base64(\`\${username}:\${password}\`);
		headers['Authorization'] = \`Basic \${credentials}\`;
	}

	if (options.body !== undefined) {
		if (options.mediaType) {
			headers['Content-Type'] = options.mediaType;
		} else if (isBlob(options.body)) {
			headers['Content-Type'] = options.body.type || 'application/octet-stream';
		} else if (isString(options.body)) {
			headers['Content-Type'] = 'text/plain';
		} else if (!isFormData(options.body)) {
			headers['Content-Type'] = 'application/json';
		}
	} else if (options.formData !== undefined) {
		if (options.mediaType) {
			headers['Content-Type'] = options.mediaType;
		}
	}

	return headers;
};`},useData:true};var xn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const getRequestBody = (options: ApiRequestOptions): unknown => {
	if (options.body) {
		return options.body;
	}
	return undefined;
};`},useData:true};var bn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const getResponseBody = (response: AxiosResponse<unknown>): unknown => {
	if (response.status !== 204) {
		return response.data;
	}
	return undefined;
};`},useData:true};var qn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const getResponseHeader = (response: AxiosResponse<unknown>, responseHeader?: string): string | undefined => {
	if (responseHeader) {
		const content = response.headers[responseHeader];
		if (isString(content)) {
			return content;
		}
	}
	return undefined;
};`},useData:true};var Cn={1:function(e,n,s,r,t){return "ApiResult<T>"},3:function(e,n,s,r,t){return "T"},5:function(e,n,s,r,t){return "result.body"},7:function(e,n,s,r,t){return "result"},compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){var o,a=n??(e.nullContext||{}),i=e.lookupProperty||function(u,l){if(Object.prototype.hasOwnProperty.call(u,l))return u[l]};return `import axios from 'axios';
import type { AxiosError, AxiosRequestConfig, AxiosResponse, AxiosInstance } from 'axios';

import { ApiError } from './ApiError';
import type { ApiRequestOptions } from './ApiRequestOptions';
import type { ApiResult } from './ApiResult';
import { CancelablePromise } from './CancelablePromise';
import type { OnCancel } from './CancelablePromise';
import type { OpenAPIConfig } from './OpenAPI';

`+((o=e.invokePartial(i(r,"functions/isString"),n,{name:"functions/isString",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/isStringWithValue"),n,{name:"functions/isStringWithValue",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/isBlob"),n,{name:"functions/isBlob",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/isFormData"),n,{name:"functions/isFormData",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/isSuccess"),n,{name:"functions/isSuccess",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/base64"),n,{name:"functions/base64",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/getQueryString"),n,{name:"functions/getQueryString",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/getUrl"),n,{name:"functions/getUrl",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/getFormData"),n,{name:"functions/getFormData",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/resolve"),n,{name:"functions/resolve",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"axios/getHeaders"),n,{name:"axios/getHeaders",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"axios/getRequestBody"),n,{name:"axios/getRequestBody",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"axios/sendRequest"),n,{name:"axios/sendRequest",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"axios/getResponseHeader"),n,{name:"axios/getResponseHeader",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"axios/getResponseBody"),n,{name:"axios/getResponseBody",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/catchErrorCodes"),n,{name:"functions/catchErrorCodes",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

/**
 * Request method
 * @param config The OpenAPI configuration object
 * @param options The request options from the service
 * @param axiosClient The axios client instance to use
 * @returns CancelablePromise<`+((o=i(s,"ifServicesResponse").call(a,"response",{name:"ifServicesResponse",hash:{},fn:e.program(1,t,0),inverse:e.program(3,t,0),data:t,loc:{start:{line:64,column:30},end:{line:64,column:108}}}))!=null?o:"")+`>
 * @throws ApiError
 */
export const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions<T>, axiosClient: AxiosInstance = axios): CancelablePromise<`+((o=i(s,"ifServicesResponse").call(a,"response",{name:"ifServicesResponse",hash:{},fn:e.program(1,t,0),inverse:e.program(3,t,0),data:t,loc:{start:{line:67,column:136},end:{line:67,column:214}}}))!=null?o:"")+`> => {
	return new CancelablePromise(async (resolve, reject, onCancel) => {
		try {
			const url = getUrl(config, options);
			const formData = getFormData(options);
			const body = getRequestBody(options);
			const headers = await getHeaders(config, options);

			if (!onCancel.isCancelled) {
				let response = await sendRequest<T>(config, options, url, body, formData, headers, onCancel, axiosClient);

				for (const fn of config.interceptors.response._fns) {
					response = await fn(response);
				}

				const responseBody = getResponseBody(response);
				const responseHeader = getResponseHeader(response, options.responseHeader);

				let transformedBody = responseBody;
				if (options.responseTransformer && isSuccess(response.status)) {
					transformedBody = await options.responseTransformer(responseBody)
				}

				const result: ApiResult = {
					url,
					ok: isSuccess(response.status),
					status: response.status,
					statusText: response.statusText,
					body: responseHeader ?? transformedBody,
				};

				catchErrorCodes(options, result);

				resolve(`+((o=i(s,"ifServicesResponse").call(a,"body",{name:"ifServicesResponse",hash:{},fn:e.program(5,t,0),inverse:e.program(7,t,0),data:t,loc:{start:{line:100,column:12},end:{line:100,column:90}}}))!=null?o:"")+`);
			}
		} catch (error) {
			reject(error);
		}
	});
};`},usePartial:true,useData:true};var An={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const sendRequest = async <T>(
	config: OpenAPIConfig,
	options: ApiRequestOptions<T>,
	url: string,
	body: unknown,
	formData: FormData | undefined,
	headers: Record<string, string>,
	onCancel: OnCancel,
	axiosClient: AxiosInstance
): Promise<AxiosResponse<T>> => {
	const controller = new AbortController();

	let requestConfig: AxiosRequestConfig = {
		data: body ?? formData,
		headers,
		method: options.method,
		signal: controller.signal,
		url,
		withCredentials: config.WITH_CREDENTIALS,
	};

	onCancel(() => controller.abort());

	for (const fn of config.interceptors.request._fns) {
		requestConfig = await fn(requestConfig);
	}

	try {
		return await axiosClient.request(requestConfig);
	} catch (error) {
		const axiosError = error as AxiosError<T>;
		if (axiosError.response) {
			return axiosError.response;
		}
		throw error;
	}
};`},useData:true};var Tn={1:function(e,n,s,r,t){return `import type { HttpClient } from '@angular/common/http';
import type { Observable } from 'rxjs';

import type { ApiRequestOptions } from './ApiRequestOptions';
import type { OpenAPIConfig } from './OpenAPI';
`},3:function(e,n,s,r,t){return `import type { ApiRequestOptions } from './ApiRequestOptions';
import type { CancelablePromise } from './CancelablePromise';
import type { OpenAPIConfig } from './OpenAPI';
`},5:function(e,n,s,r,t){return `	constructor(
		public readonly config: OpenAPIConfig,
		public readonly http: HttpClient,
	) {}
`},7:function(e,n,s,r,t){return `	constructor(public readonly config: OpenAPIConfig) {}
`},9:function(e,n,s,r,t){return `	public abstract request<T>(options: ApiRequestOptions<T>): Observable<T>;
`},11:function(e,n,s,r,t){return `	public abstract request<T>(options: ApiRequestOptions<T>): CancelablePromise<T>;
`},compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){var o,a=n??(e.nullContext||{}),i=e.lookupProperty||function(u,l){if(Object.prototype.hasOwnProperty.call(u,l))return u[l]};return ((o=i(s,"equals").call(a,i(i(i(i(t,"root"),"$config"),"client"),"name"),"legacy/angular",{name:"equals",hash:{},fn:e.program(1,t,0),inverse:e.program(3,t,0),data:t,loc:{start:{line:1,column:0},end:{line:11,column:11}}}))!=null?o:"")+`
export abstract class BaseHttpRequest {

`+((o=i(s,"equals").call(a,i(i(i(i(t,"root"),"$config"),"client"),"name"),"legacy/angular",{name:"equals",hash:{},fn:e.program(5,t,0),inverse:e.program(7,t,0),data:t,loc:{start:{line:15,column:1},end:{line:22,column:12}}}))!=null?o:"")+`
`+((o=i(s,"equals").call(a,i(i(i(i(t,"root"),"$config"),"client"),"name"),"legacy/angular",{name:"equals",hash:{},fn:e.program(9,t,0),inverse:e.program(11,t,0),data:t,loc:{start:{line:24,column:1},end:{line:28,column:12}}}))!=null?o:"")+"}"},useData:true};var On={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export class CancelError extends Error {
	constructor(message: string) {
		super(message);
		this.name = 'CancelError';
	}

	public get isCancelled(): boolean {
		return true;
	}
}

export interface OnCancel {
	readonly isResolved: boolean;
	readonly isRejected: boolean;
	readonly isCancelled: boolean;

	(cancelHandler: () => void): void;
}

export class CancelablePromise<T> implements Promise<T> {
	private _isResolved: boolean;
	private _isRejected: boolean;
	private _isCancelled: boolean;
	readonly cancelHandlers: (() => void)[];
	readonly promise: Promise<T>;
	private _resolve?: (value: T | PromiseLike<T>) => void;
	private _reject?: (reason?: unknown) => void;

	constructor(
		executor: (
			resolve: (value: T | PromiseLike<T>) => void,
			reject: (reason?: unknown) => void,
			onCancel: OnCancel
		) => void
	) {
		this._isResolved = false;
		this._isRejected = false;
		this._isCancelled = false;
		this.cancelHandlers = [];
		this.promise = new Promise<T>((resolve, reject) => {
			this._resolve = resolve;
			this._reject = reject;

			const onResolve = (value: T | PromiseLike<T>): void => {
				if (this._isResolved || this._isRejected || this._isCancelled) {
					return;
				}
				this._isResolved = true;
				if (this._resolve) this._resolve(value);
			};

			const onReject = (reason?: unknown): void => {
				if (this._isResolved || this._isRejected || this._isCancelled) {
					return;
				}
				this._isRejected = true;
				if (this._reject) this._reject(reason);
			};

			const onCancel = (cancelHandler: () => void): void => {
				if (this._isResolved || this._isRejected || this._isCancelled) {
					return;
				}
				this.cancelHandlers.push(cancelHandler);
			};

			Object.defineProperty(onCancel, 'isResolved', {
				get: (): boolean => this._isResolved,
			});

			Object.defineProperty(onCancel, 'isRejected', {
				get: (): boolean => this._isRejected,
			});

			Object.defineProperty(onCancel, 'isCancelled', {
				get: (): boolean => this._isCancelled,
			});

			return executor(onResolve, onReject, onCancel as OnCancel);
		});
	}

	get [Symbol.toStringTag]() {
		return "Cancellable Promise";
	}

	public then<TResult1 = T, TResult2 = never>(
		onFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,
		onRejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | null
	): Promise<TResult1 | TResult2> {
		return this.promise.then(onFulfilled, onRejected);
	}

	public catch<TResult = never>(
		onRejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | null
	): Promise<T | TResult> {
		return this.promise.catch(onRejected);
	}

	public finally(onFinally?: (() => void) | null): Promise<T> {
		return this.promise.finally(onFinally);
	}

	public cancel(): void {
		if (this._isResolved || this._isRejected || this._isCancelled) {
			return;
		}
		this._isCancelled = true;
		if (this.cancelHandlers.length) {
			try {
				for (const cancelHandler of this.cancelHandlers) {
					cancelHandler();
				}
			} catch (error) {
				console.warn('Cancellation threw an error', error);
				return;
			}
		}
		this.cancelHandlers.length = 0;
		if (this._reject) this._reject(new CancelError('Request aborted'));
	}

	public get isCancelled(): boolean {
		return this._isCancelled;
	}
}`},useData:true};var kn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const getHeaders = async <T>(config: OpenAPIConfig, options: ApiRequestOptions<T>): Promise<Headers> => {
	const [token, username, password, additionalHeaders] = await Promise.all([
		// @ts-ignore
		resolve(options, config.TOKEN),
		// @ts-ignore
		resolve(options, config.USERNAME),
		// @ts-ignore
		resolve(options, config.PASSWORD),
		// @ts-ignore
		resolve(options, config.HEADERS),
	]);

	const headers = Object.entries({
		Accept: 'application/json',
		...additionalHeaders,
		...options.headers,
	})
		.filter(([, value]) => value !== undefined && value !== null)
		.reduce((headers, [key, value]) => ({
			...headers,
			[key]: String(value),
		}), {} as Record<string, string>);

	if (isStringWithValue(token)) {
		headers['Authorization'] = \`Bearer \${token}\`;
	}

	if (isStringWithValue(username) && isStringWithValue(password)) {
		const credentials = base64(\`\${username}:\${password}\`);
		headers['Authorization'] = \`Basic \${credentials}\`;
	}

	if (options.body !== undefined) {
		if (options.mediaType) {
			headers['Content-Type'] = options.mediaType;
		} else if (isBlob(options.body)) {
			headers['Content-Type'] = options.body.type || 'application/octet-stream';
		} else if (isString(options.body)) {
			headers['Content-Type'] = 'text/plain';
		} else if (!isFormData(options.body)) {
			headers['Content-Type'] = 'application/json';
		}
	}

	return new Headers(headers);
};`},useData:true};var wn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const getRequestBody = (options: ApiRequestOptions): unknown => {
	if (options.body !== undefined) {
		if (options.mediaType?.includes('application/json') || options.mediaType?.includes('+json')) {
			return JSON.stringify(options.body);
		} else if (isString(options.body) || isBlob(options.body) || isFormData(options.body)) {
			return options.body;
		} else {
			return JSON.stringify(options.body);
		}
	}
	return undefined;
};`},useData:true};var En={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const getResponseBody = async (response: Response): Promise<unknown> => {
	if (response.status !== 204) {
		try {
			const contentType = response.headers.get('Content-Type');
			if (contentType) {
				const binaryTypes = ['application/octet-stream', 'application/pdf', 'application/zip', 'audio/', 'image/', 'video/'];
				if (contentType.includes('application/json') || contentType.includes('+json')) {
					return await response.json();
				} else if (binaryTypes.some(type => contentType.includes(type))) {
					return await response.blob();
				} else if (contentType.includes('multipart/form-data')) {
					return await response.formData();
				} else if (contentType.includes('text/')) {
					return await response.text();
				}
			}
		} catch (error) {
			console.error(error);
		}
	}
	return undefined;
};`},useData:true};var Sn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const getResponseHeader = (response: Response, responseHeader?: string): string | undefined => {
	if (responseHeader) {
		const content = response.headers.get(responseHeader);
		if (isString(content)) {
			return content;
		}
	}
	return undefined;
};`},useData:true};var Hn={1:function(e,n,s,r,t){return `import fetch, { FormData, Headers } from 'node-fetch';
import type { RequestInit, Response } from 'node-fetch';

`},3:function(e,n,s,r,t){return "ApiResult<T>"},5:function(e,n,s,r,t){return "T"},7:function(e,n,s,r,t){return "result.body"},9:function(e,n,s,r,t){return "result"},compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){var o,a=n??(e.nullContext||{}),i=e.lookupProperty||function(u,l){if(Object.prototype.hasOwnProperty.call(u,l))return u[l]};return ((o=i(s,"equals").call(a,i(i(i(i(t,"root"),"$config"),"client"),"name"),"legacy/node",{name:"equals",hash:{},fn:e.program(1,t,0),inverse:e.noop,data:t,loc:{start:{line:1,column:0},end:{line:5,column:11}}}))!=null?o:"")+`import { ApiError } from './ApiError';
import type { ApiRequestOptions } from './ApiRequestOptions';
import type { ApiResult } from './ApiResult';
import { CancelablePromise } from './CancelablePromise';
import type { OnCancel } from './CancelablePromise';
import type { OpenAPIConfig } from './OpenAPI';

`+((o=e.invokePartial(i(r,"functions/isString"),n,{name:"functions/isString",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/isStringWithValue"),n,{name:"functions/isStringWithValue",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/isBlob"),n,{name:"functions/isBlob",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/isFormData"),n,{name:"functions/isFormData",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/base64"),n,{name:"functions/base64",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/getQueryString"),n,{name:"functions/getQueryString",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/getUrl"),n,{name:"functions/getUrl",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/getFormData"),n,{name:"functions/getFormData",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/resolve"),n,{name:"functions/resolve",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"fetch/getHeaders"),n,{name:"fetch/getHeaders",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"fetch/getRequestBody"),n,{name:"fetch/getRequestBody",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"fetch/sendRequest"),n,{name:"fetch/sendRequest",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"fetch/getResponseHeader"),n,{name:"fetch/getResponseHeader",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"fetch/getResponseBody"),n,{name:"fetch/getResponseBody",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/catchErrorCodes"),n,{name:"functions/catchErrorCodes",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

/**
 * Request method
 * @param config The OpenAPI configuration object
 * @param options The request options from the service
 * @returns CancelablePromise<`+((o=i(s,"ifServicesResponse").call(a,"response",{name:"ifServicesResponse",hash:{},fn:e.program(3,t,0),inverse:e.program(5,t,0),data:t,loc:{start:{line:62,column:30},end:{line:62,column:108}}}))!=null?o:"")+`>
 * @throws ApiError
 */
export const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions<T>): CancelablePromise<`+((o=i(s,"ifServicesResponse").call(a,"response",{name:"ifServicesResponse",hash:{},fn:e.program(3,t,0),inverse:e.program(5,t,0),data:t,loc:{start:{line:65,column:100},end:{line:65,column:178}}}))!=null?o:"")+`> => {
	return new CancelablePromise(async (resolve, reject, onCancel) => {
		try {
			const url = getUrl(config, options);
			const formData = getFormData(options);
			const body = getRequestBody(options);
			const headers = await getHeaders(config, options);

			if (!onCancel.isCancelled) {
				let response = await sendRequest(config, options, url, body, formData, headers, onCancel);

				for (const fn of config.interceptors.response._fns) {
					response = await fn(response);
				}

				const responseBody = await getResponseBody(response);
				const responseHeader = getResponseHeader(response, options.responseHeader);

				let transformedBody = responseBody;
				if (options.responseTransformer && response.ok) {
					transformedBody = await options.responseTransformer(responseBody)
				}

				const result: ApiResult = {
					url,
					ok: response.ok,
					status: response.status,
					statusText: response.statusText,
					body: responseHeader ?? transformedBody,
				};

				catchErrorCodes(options, result);

				resolve(`+((o=i(s,"ifServicesResponse").call(a,"body",{name:"ifServicesResponse",hash:{},fn:e.program(7,t,0),inverse:e.program(9,t,0),data:t,loc:{start:{line:98,column:12},end:{line:98,column:90}}}))!=null?o:"")+`);
			}
		} catch (error) {
			reject(error);
		}
	});
};`},usePartial:true,useData:true};var Dn={1:function(e,n,s,r,t){return `	if (config.WITH_CREDENTIALS) {
		request.credentials = config.CREDENTIALS;
	}
`},compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){var o,a=e.lookupProperty||function(i,u){if(Object.prototype.hasOwnProperty.call(i,u))return i[u]};return `export const sendRequest = async (
	config: OpenAPIConfig,
	options: ApiRequestOptions,
	url: string,
	body: any,
	formData: FormData | undefined,
	headers: Headers,
	onCancel: OnCancel
): Promise<Response> => {
	const controller = new AbortController();

	let request: RequestInit = {
		headers,
		body: body ?? formData,
		method: options.method,
		signal: controller.signal,
	};

`+((o=a(s,"equals").call(n??(e.nullContext||{}),a(a(a(a(t,"root"),"$config"),"client"),"name"),"legacy/fetch",{name:"equals",hash:{},fn:e.program(1,t,0),inverse:e.noop,data:t,loc:{start:{line:19,column:1},end:{line:23,column:12}}}))!=null?o:"")+`
	for (const fn of config.interceptors.request._fns) {
		request = await fn(request);
	}

	onCancel(() => controller.abort());

	return await fetch(url, request);
};`},useData:true};var In={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const base64 = (str: string): string => {
	try {
		return btoa(str);
	} catch (err) {
		// @ts-ignore
		return Buffer.from(str).toString('base64');
	}
};`},useData:true};var Bn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {
	const errors: Record<number, string> = {
		400: 'Bad Request',
		401: 'Unauthorized',
		402: 'Payment Required',
		403: 'Forbidden',
		404: 'Not Found',
		405: 'Method Not Allowed',
		406: 'Not Acceptable',
		407: 'Proxy Authentication Required',
		408: 'Request Timeout',
		409: 'Conflict',
		410: 'Gone',
		411: 'Length Required',
		412: 'Precondition Failed',
		413: 'Payload Too Large',
		414: 'URI Too Long',
		415: 'Unsupported Media Type',
		416: 'Range Not Satisfiable',
		417: 'Expectation Failed',
		418: 'Im a teapot',
		421: 'Misdirected Request',
		422: 'Unprocessable Content',
		423: 'Locked',
		424: 'Failed Dependency',
		425: 'Too Early',
		426: 'Upgrade Required',
		428: 'Precondition Required',
		429: 'Too Many Requests',
		431: 'Request Header Fields Too Large',
		451: 'Unavailable For Legal Reasons',
		500: 'Internal Server Error',
		501: 'Not Implemented',
		502: 'Bad Gateway',
		503: 'Service Unavailable',
		504: 'Gateway Timeout',
		505: 'HTTP Version Not Supported',
		506: 'Variant Also Negotiates',
		507: 'Insufficient Storage',
		508: 'Loop Detected',
		510: 'Not Extended',
		511: 'Network Authentication Required',
		...options.errors,
	}

	const error = errors[result.status];
	if (error) {
		throw new ApiError(options, result, error);
	}

	if (!result.ok) {
		const errorStatus = result.status ?? 'unknown';
		const errorStatusText = result.statusText ?? 'unknown';
		const errorBody = (() => {
			try {
				return JSON.stringify(result.body, null, 2);
			} catch (e) {
				return undefined;
			}
		})();

		throw new ApiError(options, result,
			\`Generic Error: status: \${errorStatus}; status text: \${errorStatusText}; body: \${errorBody}\`
		);
	}
};`},useData:true};var $n={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const getFormData = (options: ApiRequestOptions): FormData | undefined => {
	if (options.formData) {
		const formData = new FormData();

		const process = (key: string, value: unknown) => {
			if (isString(value) || isBlob(value)) {
				formData.append(key, value);
			} else {
				formData.append(key, JSON.stringify(value));
			}
		};

		Object.entries(options.formData)
			.filter(([, value]) => value !== undefined && value !== null)
			.forEach(([key, value]) => {
				if (Array.isArray(value)) {
					value.forEach(v => process(key, v));
				} else {
					process(key, value);
				}
			});

		return formData;
	}
	return undefined;
};`},useData:true};var jn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const getQueryString = (params: Record<string, unknown>): string => {
	const qs: string[] = [];

	const append = (key: string, value: unknown) => {
		qs.push(\`\${encodeURIComponent(key)}=\${encodeURIComponent(String(value))}\`);
	};

	const encodePair = (key: string, value: unknown) => {
		if (value === undefined || value === null) {
			return;
		}

		if (value instanceof Date) {
			append(key, value.toISOString());
		} else if (Array.isArray(value)) {
			value.forEach(v => encodePair(key, v));
		} else if (typeof value === 'object') {
			Object.entries(value).forEach(([k, v]) => encodePair(\`\${key}[\${k}]\`, v));
		} else {
			append(key, value);
		}
	};

	Object.entries(params).forEach(([key, value]) => encodePair(key, value));

	return qs.length ? \`?\${qs.join('&')}\` : '';
};`},useData:true};var Nn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `const getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {
	const encoder = config.ENCODE_PATH || encodeURI;

	const path = options.url
		.replace('{api-version}', config.VERSION)
		.replace(/{(.*?)}/g, (substring: string, group: string) => {
			if (options.path?.hasOwnProperty(group)) {
				return encoder(String(options.path[group]));
			}
			return substring;
		});

	const url = config.BASE + path;
	return options.query ? url + getQueryString(options.query) : url;
};`},useData:true};var _n={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const isBlob = (value: any): value is Blob => {
	return value instanceof Blob;
};`},useData:true};var Fn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const isFormData = (value: unknown): value is FormData => {
	return value instanceof FormData;
};`},useData:true};var Ln={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const isString = (value: unknown): value is string => {
	return typeof value === 'string';
};`},useData:true};var Wn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const isStringWithValue = (value: unknown): value is string => {
	return isString(value) && value !== '';
};`},useData:true};var Mn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const isSuccess = (status: number): boolean => {
	return status >= 200 && status < 300;
};`},useData:true};var Un={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `type Resolver<T> = (options: ApiRequestOptions<T>) => Promise<T>;

export const resolve = async <T>(options: ApiRequestOptions<T>, resolver?: T | Resolver<T>): Promise<T | undefined> => {
	if (typeof resolver === 'function') {
		return (resolver as Resolver<T>)(options);
	}
	return resolver;
};`},useData:true};var Vn={1:function(e,n,s,r,t){return `import { Inject, Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import type { Observable } from 'rxjs';

import type { ApiRequestOptions } from './ApiRequestOptions';
import { BaseHttpRequest } from './BaseHttpRequest';
import type { OpenAPIConfig } from './OpenAPI';
import { OpenAPI } from './OpenAPI';
import { request as __request } from './request';
`},3:function(e,n,s,r,t){return `import type { ApiRequestOptions } from './ApiRequestOptions';
import { BaseHttpRequest } from './BaseHttpRequest';
import type { CancelablePromise } from './CancelablePromise';
import type { OpenAPIConfig } from './OpenAPI';
import { request as __request } from './request';
`},5:function(e,n,s,r,t){return `@Injectable()
`},7:function(e,n,s,r,t){return `	constructor(
		@Inject(OpenAPI)
		config: OpenAPIConfig,
		http: HttpClient,
	) {
		super(config, http);
	}
`},9:function(e,n,s,r,t){return `	constructor(config: OpenAPIConfig) {
		super(config);
	}
`},11:function(e,n,s,r,t){return `	/**
	 * Request method
	 * @param options The request options from the service
	 * @returns Observable<T>
	 * @throws ApiError
	 */
	public override request<T>(options: ApiRequestOptions<T>): Observable<T> {
		return __request(this.config, this.http, options);
	}
`},13:function(e,n,s,r,t){return `	/**
	 * Request method
	 * @param options The request options from the service
	 * @returns CancelablePromise<T>
	 * @throws ApiError
	 */
	public override request<T>(options: ApiRequestOptions<T>): CancelablePromise<T> {
		return __request(this.config, options);
	}
`},compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){var o,a=n??(e.nullContext||{}),i=e.lookupProperty||function(u,l){if(Object.prototype.hasOwnProperty.call(u,l))return u[l]};return ((o=i(s,"equals").call(a,i(i(i(i(t,"root"),"$config"),"client"),"name"),"legacy/angular",{name:"equals",hash:{},fn:e.program(1,t,0),inverse:e.program(3,t,0),data:t,loc:{start:{line:1,column:0},end:{line:17,column:11}}}))!=null?o:"")+`
`+((o=i(s,"equals").call(a,i(i(i(i(t,"root"),"$config"),"client"),"name"),"legacy/angular",{name:"equals",hash:{},fn:e.program(5,t,0),inverse:e.noop,data:t,loc:{start:{line:19,column:0},end:{line:21,column:11}}}))!=null?o:"")+"export class "+((o=e.lambda(e.strict(n,"httpRequest",{start:{line:22,column:15},end:{line:22,column:26}}),n))!=null?o:"")+` extends BaseHttpRequest {

`+((o=i(s,"equals").call(a,i(i(i(i(t,"root"),"$config"),"client"),"name"),"legacy/angular",{name:"equals",hash:{},fn:e.program(7,t,0),inverse:e.program(9,t,0),data:t,loc:{start:{line:24,column:1},end:{line:36,column:12}}}))!=null?o:"")+`
`+((o=i(s,"equals").call(a,i(i(i(i(t,"root"),"$config"),"client"),"name"),"legacy/angular",{name:"equals",hash:{},fn:e.program(11,t,0),inverse:e.program(13,t,0),data:t,loc:{start:{line:38,column:1},end:{line:58,column:12}}}))!=null?o:"")+"}"},useData:true};var Gn={1:function(e,n,s,r,t){return `import type { HttpResponse } from '@angular/common/http';
`},3:function(e,n,s,r,t){return `import type { AxiosRequestConfig, AxiosResponse } from 'axios';
`},5:function(e,n,s,r,t){return `import type { RequestInit, Response } from 'node-fetch';
`},7:function(e,n,s,r,t){return `		response: Interceptors<HttpResponse<any>>;
`},9:function(e,n,s,r,t){return `		request: Interceptors<AxiosRequestConfig>;
		response: Interceptors<AxiosResponse>;
`},11:function(e,n,s,r,t){return `		request: Interceptors<RequestInit>;
		response: Interceptors<Response>;
`},13:function(e,n,s,r,t){return `		request: Interceptors<XMLHttpRequest>;
		response: Interceptors<XMLHttpRequest>;
`},15:function(e,n,s,r,t){return `		request: new Interceptors(),
`},compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){var o,a=n??(e.nullContext||{}),i=e.strict,u=e.lambda,l=e.lookupProperty||function(c,m){if(Object.prototype.hasOwnProperty.call(c,m))return c[m]};return ((o=l(s,"equals").call(a,l(l(l(l(t,"root"),"$config"),"client"),"name"),"legacy/angular",{name:"equals",hash:{},fn:e.program(1,t,0),inverse:e.noop,data:t,loc:{start:{line:1,column:0},end:{line:3,column:11}}}))!=null?o:"")+((o=l(s,"equals").call(a,l(l(l(l(t,"root"),"$config"),"client"),"name"),"legacy/axios",{name:"equals",hash:{},fn:e.program(3,t,0),inverse:e.noop,data:t,loc:{start:{line:4,column:0},end:{line:6,column:11}}}))!=null?o:"")+((o=l(s,"equals").call(a,l(l(l(l(t,"root"),"$config"),"client"),"name"),"legacy/node",{name:"equals",hash:{},fn:e.program(5,t,0),inverse:e.noop,data:t,loc:{start:{line:7,column:0},end:{line:9,column:11}}}))!=null?o:"")+`import type { ApiRequestOptions } from './ApiRequestOptions';

type Headers = Record<string, string>;
type Middleware<T> = (value: T) => T | Promise<T>;
type Resolver<T> = (options: ApiRequestOptions<T>) => Promise<T>;

export class Interceptors<T> {
  _fns: Middleware<T>[];

  constructor() {
    this._fns = [];
  }

  eject(fn: Middleware<T>): void {
    const index = this._fns.indexOf(fn);
    if (index !== -1) {
      this._fns = [...this._fns.slice(0, index), ...this._fns.slice(index + 1)];
    }
  }

  use(fn: Middleware<T>): void {
    this._fns = [...this._fns, fn];
  }
}

export type OpenAPIConfig = {
	BASE: string;
	CREDENTIALS: 'include' | 'omit' | 'same-origin';
	ENCODE_PATH?: ((path: string) => string) | undefined;
	HEADERS?: Headers | Resolver<Headers> | undefined;
	PASSWORD?: string | Resolver<string> | undefined;
	TOKEN?: string | Resolver<string> | undefined;
	USERNAME?: string | Resolver<string> | undefined;
	VERSION: string;
	WITH_CREDENTIALS: boolean;
	interceptors: {
`+((o=l(s,"equals").call(a,l(l(l(l(t,"root"),"$config"),"client"),"name"),"legacy/angular",{name:"equals",hash:{},fn:e.program(7,t,0),inverse:e.noop,data:t,loc:{start:{line:46,column:2},end:{line:48,column:13}}}))!=null?o:"")+((o=l(s,"equals").call(a,l(l(l(l(t,"root"),"$config"),"client"),"name"),"legacy/axios",{name:"equals",hash:{},fn:e.program(9,t,0),inverse:e.noop,data:t,loc:{start:{line:49,column:2},end:{line:52,column:13}}}))!=null?o:"")+((o=l(s,"equals").call(a,l(l(l(l(t,"root"),"$config"),"client"),"name"),"legacy/fetch",{name:"equals",hash:{},fn:e.program(11,t,0),inverse:e.noop,data:t,loc:{start:{line:53,column:2},end:{line:56,column:13}}}))!=null?o:"")+((o=l(s,"equals").call(a,l(l(l(l(t,"root"),"$config"),"client"),"name"),"legacy/node",{name:"equals",hash:{},fn:e.program(11,t,0),inverse:e.noop,data:t,loc:{start:{line:57,column:2},end:{line:60,column:13}}}))!=null?o:"")+((o=l(s,"equals").call(a,l(l(l(l(t,"root"),"$config"),"client"),"name"),"legacy/xhr",{name:"equals",hash:{},fn:e.program(13,t,0),inverse:e.noop,data:t,loc:{start:{line:61,column:2},end:{line:64,column:13}}}))!=null?o:"")+`	};
};

export const OpenAPI: OpenAPIConfig = {
	BASE: '`+((o=u(i(n,"server",{start:{line:69,column:11},end:{line:69,column:17}}),n))!=null?o:"")+`',
	CREDENTIALS: 'include',
	ENCODE_PATH: undefined,
	HEADERS: undefined,
	PASSWORD: undefined,
	TOKEN: undefined,
	USERNAME: undefined,
	VERSION: '`+((o=u(i(n,"version",{start:{line:76,column:14},end:{line:76,column:21}}),n))!=null?o:"")+`',
	WITH_CREDENTIALS: false,
	interceptors: {
`+((o=l(s,"notEquals").call(a,l(l(l(l(t,"root"),"$config"),"client"),"name"),"legacy/angular",{name:"notEquals",hash:{},fn:e.program(15,t,0),inverse:e.noop,data:t,loc:{start:{line:79,column:2},end:{line:81,column:16}}}))!=null?o:"")+`		response: new Interceptors(),
	},
};`},useData:true};var zn={1:function(e,n,s,r,t){var o,a=e.lookupProperty||function(i,u){if(Object.prototype.hasOwnProperty.call(i,u))return i[u]};return (o=e.invokePartial(a(r,"angular/request"),n,{name:"angular/request",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:""},3:function(e,n,s,r,t){var o,a=e.lookupProperty||function(i,u){if(Object.prototype.hasOwnProperty.call(i,u))return i[u]};return (o=e.invokePartial(a(r,"axios/request"),n,{name:"axios/request",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:""},5:function(e,n,s,r,t){var o,a=e.lookupProperty||function(i,u){if(Object.prototype.hasOwnProperty.call(i,u))return i[u]};return (o=e.invokePartial(a(r,"fetch/request"),n,{name:"fetch/request",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:""},7:function(e,n,s,r,t){var o,a=e.lookupProperty||function(i,u){if(Object.prototype.hasOwnProperty.call(i,u))return i[u]};return (o=e.invokePartial(a(r,"xhr/request"),n,{name:"xhr/request",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:""},compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){var o,a=n??(e.nullContext||{}),i=e.lookupProperty||function(u,l){if(Object.prototype.hasOwnProperty.call(u,l))return u[l]};return ((o=i(s,"equals").call(a,i(i(i(i(t,"root"),"$config"),"client"),"name"),"legacy/angular",{name:"equals",hash:{},fn:e.program(1,t,0),inverse:e.noop,data:t,loc:{start:{line:1,column:0},end:{line:1,column:87}}}))!=null?o:"")+((o=i(s,"equals").call(a,i(i(i(i(t,"root"),"$config"),"client"),"name"),"legacy/axios",{name:"equals",hash:{},fn:e.program(3,t,0),inverse:e.noop,data:t,loc:{start:{line:2,column:0},end:{line:2,column:83}}}))!=null?o:"")+((o=i(s,"equals").call(a,i(i(i(i(t,"root"),"$config"),"client"),"name"),"legacy/fetch",{name:"equals",hash:{},fn:e.program(5,t,0),inverse:e.noop,data:t,loc:{start:{line:3,column:0},end:{line:3,column:83}}}))!=null?o:"")+((o=i(s,"equals").call(a,i(i(i(i(t,"root"),"$config"),"client"),"name"),"legacy/node",{name:"equals",hash:{},fn:e.program(5,t,0),inverse:e.noop,data:t,loc:{start:{line:4,column:0},end:{line:4,column:82}}}))!=null?o:"")+((o=i(s,"equals").call(a,i(i(i(i(t,"root"),"$config"),"client"),"name"),"legacy/xhr",{name:"equals",hash:{},fn:e.program(7,t,0),inverse:e.noop,data:t,loc:{start:{line:5,column:0},end:{line:5,column:79}}}))!=null?o:"")},usePartial:true,useData:true};var Kn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const getHeaders = async <T>(config: OpenAPIConfig, options: ApiRequestOptions<T>): Promise<Headers> => {
	const [token, username, password, additionalHeaders] = await Promise.all([
		// @ts-ignore
		resolve(options, config.TOKEN),
		// @ts-ignore
		resolve(options, config.USERNAME),
		// @ts-ignore
		resolve(options, config.PASSWORD),
		// @ts-ignore
		resolve(options, config.HEADERS),
	]);

	const headers = Object.entries({
		Accept: 'application/json',
		...additionalHeaders,
		...options.headers,
	})
		.filter(([, value]) => value !== undefined && value !== null)
		.reduce((headers, [key, value]) => ({
			...headers,
			[key]: String(value),
		}), {} as Record<string, string>);

	if (isStringWithValue(token)) {
		headers['Authorization'] = \`Bearer \${token}\`;
	}

	if (isStringWithValue(username) && isStringWithValue(password)) {
		const credentials = base64(\`\${username}:\${password}\`);
		headers['Authorization'] = \`Basic \${credentials}\`;
	}

	if (options.body !== undefined) {
		if (options.mediaType) {
			headers['Content-Type'] = options.mediaType;
		} else if (isBlob(options.body)) {
			headers['Content-Type'] = options.body.type || 'application/octet-stream';
		} else if (isString(options.body)) {
			headers['Content-Type'] = 'text/plain';
		} else if (!isFormData(options.body)) {
			headers['Content-Type'] = 'application/json';
		}
	}

	return new Headers(headers);
};`},useData:true};var Qn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const getRequestBody = (options: ApiRequestOptions): unknown => {
	if (options.body !== undefined) {
		if (options.mediaType?.includes('application/json') || options.mediaType?.includes('+json')) {
			return JSON.stringify(options.body);
		} else if (isString(options.body) || isBlob(options.body) || isFormData(options.body)) {
			return options.body;
		} else {
			return JSON.stringify(options.body);
		}
	}
	return undefined;
};`},useData:true};var Jn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const getResponseBody = (xhr: XMLHttpRequest): unknown => {
	if (xhr.status !== 204) {
		try {
			const contentType = xhr.getResponseHeader('Content-Type');
			if (contentType) {
				if (contentType.includes('application/json') || contentType.includes('+json')) {
					return JSON.parse(xhr.responseText);
				} else {
					return xhr.responseText;
				}
			}
		} catch (error) {
			console.error(error);
		}
	}
	return undefined;
};`},useData:true};var Xn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const getResponseHeader = (xhr: XMLHttpRequest, responseHeader?: string): string | undefined => {
	if (responseHeader) {
		const content = xhr.getResponseHeader(responseHeader);
		if (isString(content)) {
			return content;
		}
	}
	return undefined;
};`},useData:true};var Yn={1:function(e,n,s,r,t){return "ApiResult<T>"},3:function(e,n,s,r,t){return "T"},5:function(e,n,s,r,t){return "result.body"},7:function(e,n,s,r,t){return "result"},compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){var o,a=n??(e.nullContext||{}),i=e.lookupProperty||function(u,l){if(Object.prototype.hasOwnProperty.call(u,l))return u[l]};return `import { ApiError } from './ApiError';
import type { ApiRequestOptions } from './ApiRequestOptions';
import type { ApiResult } from './ApiResult';
import { CancelablePromise } from './CancelablePromise';
import type { OnCancel } from './CancelablePromise';
import type { OpenAPIConfig } from './OpenAPI';

`+((o=e.invokePartial(i(r,"functions/isString"),n,{name:"functions/isString",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/isStringWithValue"),n,{name:"functions/isStringWithValue",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/isBlob"),n,{name:"functions/isBlob",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/isFormData"),n,{name:"functions/isFormData",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/isSuccess"),n,{name:"functions/isSuccess",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/base64"),n,{name:"functions/base64",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/getQueryString"),n,{name:"functions/getQueryString",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/getUrl"),n,{name:"functions/getUrl",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/getFormData"),n,{name:"functions/getFormData",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/resolve"),n,{name:"functions/resolve",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"fetch/getHeaders"),n,{name:"fetch/getHeaders",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"xhr/getRequestBody"),n,{name:"xhr/getRequestBody",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"xhr/sendRequest"),n,{name:"xhr/sendRequest",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"xhr/getResponseHeader"),n,{name:"xhr/getResponseHeader",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"xhr/getResponseBody"),n,{name:"xhr/getResponseBody",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

`+((o=e.invokePartial(i(r,"functions/catchErrorCodes"),n,{name:"functions/catchErrorCodes",data:t,helpers:s,partials:r,decorators:e.decorators}))!=null?o:"")+`

/**
 * Request method
 * @param config The OpenAPI configuration object
 * @param options The request options from the service
 * @returns CancelablePromise<`+((o=i(s,"ifServicesResponse").call(a,"response",{name:"ifServicesResponse",hash:{},fn:e.program(1,t,0),inverse:e.program(3,t,0),data:t,loc:{start:{line:60,column:30},end:{line:60,column:108}}}))!=null?o:"")+`>
 * @throws ApiError
 */
export const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions<T>): CancelablePromise<`+((o=i(s,"ifServicesResponse").call(a,"response",{name:"ifServicesResponse",hash:{},fn:e.program(1,t,0),inverse:e.program(3,t,0),data:t,loc:{start:{line:63,column:100},end:{line:63,column:178}}}))!=null?o:"")+`> => {
	return new CancelablePromise(async (resolve, reject, onCancel) => {
		try {
			const url = getUrl(config, options);
			const formData = getFormData(options);
			const body = getRequestBody(options);
			const headers = await getHeaders(config, options);

			if (!onCancel.isCancelled) {
				let response = await sendRequest(config, options, url, body, formData, headers, onCancel);

				for (const fn of config.interceptors.response._fns) {
					response = await fn(response);
				}

				const responseBody = getResponseBody(response);
				const responseHeader = getResponseHeader(response, options.responseHeader);

				let transformedBody = responseBody;
				if (options.responseTransformer && isSuccess(response.status)) {
					transformedBody = await options.responseTransformer(responseBody)
				}

				const result: ApiResult = {
					url,
					ok: isSuccess(response.status),
					status: response.status,
					statusText: response.statusText,
					body: responseHeader ?? transformedBody,
				};

				catchErrorCodes(options, result);

				resolve(`+((o=i(s,"ifServicesResponse").call(a,"body",{name:"ifServicesResponse",hash:{},fn:e.program(5,t,0),inverse:e.program(7,t,0),data:t,loc:{start:{line:96,column:12},end:{line:96,column:90}}}))!=null?o:"")+`);
			}
		} catch (error) {
			reject(error);
		}
	});
};`},usePartial:true,useData:true};var Zn={compiler:[8,">= 4.3.0"],main:function(e,n,s,r,t){return `export const sendRequest = async (
	config: OpenAPIConfig,
	options: ApiRequestOptions,
	url: string,
	body: any,
	formData: FormData | undefined,
	headers: Headers,
	onCancel: OnCancel
): Promise<XMLHttpRequest> => {
	let xhr = new XMLHttpRequest();
	xhr.open(options.method, url, true);
	xhr.withCredentials = config.WITH_CREDENTIALS;

	headers.forEach((value, key) => {
		xhr.setRequestHeader(key, value);
	});

	return new Promise<XMLHttpRequest>(async (resolve, reject) => {
		xhr.onload = () => resolve(xhr);
		xhr.onabort = () => reject(new Error('Request aborted'));
		xhr.onerror = () => reject(new Error('Network error'));

		for (const fn of config.interceptors.request._fns) {
			xhr = await fn(xhr);
		}

		xhr.send(body ?? formData);

		onCancel(() => xhr.abort());
	});
};`},useData:true};var _t=()=>{p.registerHelper("camelCase",function(e){return m({case:"camelCase",value:e})}),p.registerHelper("equals",function(e,n,s){return e===n?s.fn(this):s.inverse(this)}),p.registerHelper("ifServicesResponse",function(e$1,n){return e().plugins["@hey-api/sdk"]?.response===e$1?n.fn(this):n.inverse(this)}),p.registerHelper("ifdef",function(...e){let n=e.pop();return e.every(s=>!s)?n.inverse(this):n.fn(this)}),p.registerHelper("notEquals",function(e,n,s){return e!==n?s.fn(this):s.inverse(this)}),p.registerHelper("transformServiceName",function(e$1){return p$1({config:e(),name:e$1})});},et=()=>{_t();let e={client:p.template(pn),core:{apiError:p.template(yn),apiRequestOptions:p.template(Rn),apiResult:p.template(vn),baseHttpRequest:p.template(Tn),cancelablePromise:p.template(On),httpRequest:p.template(Vn),request:p.template(zn),settings:p.template(Gn)}};return p.registerPartial("functions/base64",p.template(In)),p.registerPartial("functions/catchErrorCodes",p.template(Bn)),p.registerPartial("functions/getFormData",p.template($n)),p.registerPartial("functions/getQueryString",p.template(jn)),p.registerPartial("functions/getUrl",p.template(Nn)),p.registerPartial("functions/isBlob",p.template(_n)),p.registerPartial("functions/isFormData",p.template(Fn)),p.registerPartial("functions/isString",p.template(Ln)),p.registerPartial("functions/isStringWithValue",p.template(Wn)),p.registerPartial("functions/isSuccess",p.template(Mn)),p.registerPartial("functions/resolve",p.template(Un)),p.registerPartial("fetch/getHeaders",p.template(kn)),p.registerPartial("fetch/getRequestBody",p.template(wn)),p.registerPartial("fetch/getResponseBody",p.template(En)),p.registerPartial("fetch/getResponseHeader",p.template(Sn)),p.registerPartial("fetch/request",p.template(Hn)),p.registerPartial("fetch/sendRequest",p.template(Dn)),p.registerPartial("xhr/getHeaders",p.template(Kn)),p.registerPartial("xhr/getRequestBody",p.template(Qn)),p.registerPartial("xhr/getResponseBody",p.template(Jn)),p.registerPartial("xhr/getResponseHeader",p.template(Xn)),p.registerPartial("xhr/request",p.template(Yn)),p.registerPartial("xhr/sendRequest",p.template(Zn)),p.registerPartial("axios/getHeaders",p.template(Pn)),p.registerPartial("axios/getRequestBody",p.template(xn)),p.registerPartial("axios/getResponseBody",p.template(bn)),p.registerPartial("axios/getResponseHeader",p.template(qn)),p.registerPartial("axios/request",p.template(Cn)),p.registerPartial("axios/sendRequest",p.template(An)),p.registerPartial("angular/getHeaders",p.template(cn)),p.registerPartial("angular/getRequestBody",p.template(mn)),p.registerPartial("angular/getResponseBody",p.template(fn)),p.registerPartial("angular/getResponseHeader",p.template(dn)),p.registerPartial("angular/request",p.template(gn)),p.registerPartial("angular/sendRequest",p.template(hn)),e};var Ft={stringCase:m};var Ws=async e=>{let n=typeof e=="function"?await e():e,s=[];try{f.start("createClient"),f.start("config"),s=await x(n),f.end("config"),f.start("handlebars");let r=et();f.end("handlebars");let o=(await Promise.all(s.map(i=>Z({config:i,templates:r})))).filter(i=>!!i);f.end("createClient");let a=s[0];return a&&a.logs.level==="debug"&&new j({totalMark:"createClient"}).report({marks:["config","openapi","handlebars","parser","generator","postprocess"]}),o}catch(r){let t$1=s[0];if(!(t$1?t$1.dryRun:n?.dryRun)){let a=t$1?.logs??t(n);if(a.level!=="silent"&&a.file){let i=`openapi-ts-error-${Date.now()}.log`,u=R.resolve(process.cwd(),a.path??"");j$1(u);let l=R.resolve(u,i);y.writeFileSync(l,`${r.message}
${r.stack}`),console.error(`\u{1F525} Unexpected error occurred. Log saved to ${l}`);}}throw console.error(`\u{1F525} Unexpected error occurred. ${r.message}`),r}},Ms=async e=>typeof e=="function"?await e():e;export{Ws as createClient,Ms as defineConfig,Ft as utils};//# sourceMappingURL=index.js.map
//# sourceMappingURL=index.js.map