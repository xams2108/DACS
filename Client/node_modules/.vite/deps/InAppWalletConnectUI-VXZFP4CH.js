"use client";
import {
  GuestLogin,
  OTPLoginUI,
  PassKeyLogin,
  PoweredByThirdweb,
  SocialLogin,
  TOS,
  WalletAuth
} from "./chunk-UG4HNTZ5.js";
import {
  ConnectWalletSocialOptions,
  LoadingScreen,
  useInAppWalletLocale,
  useScreenContext
} from "./chunk-D42AOR3Z.js";
import "./chunk-ZYPPDVLZ.js";
import "./chunk-S56NV7HU.js";
import {
  useSelectionData,
  useSetSelectionData
} from "./chunk-YELVFO7P.js";
import {
  Container,
  Img,
  ModalHeader,
  ModalTitle,
  Spacer,
  iconSize
} from "./chunk-7OKRBXF6.js";
import "./chunk-D5BPH6DU.js";
import "./chunk-P3WE4E6C.js";
import "./chunk-HBZPOO7D.js";
import "./chunk-GYYHXJ3R.js";
import "./chunk-S2TOWXEU.js";
import "./chunk-AKEHYN4S.js";
import "./chunk-43F4DZXD.js";
import "./chunk-JLR3BWY4.js";
import "./chunk-GTBRFTOM.js";
import "./chunk-44S5YASJ.js";
import "./chunk-2WGYGS5D.js";
import "./chunk-NXASE243.js";
import "./chunk-ZURXGIGP.js";
import "./chunk-FUW7UPWG.js";
import "./chunk-G4H2UJKK.js";
import "./chunk-FB5IB3WF.js";
import "./chunk-NHH5L32Z.js";
import "./chunk-GUO62LYV.js";
import "./chunk-CMLY7B67.js";
import "./chunk-57BDDLER.js";
import "./chunk-Z3FY5SMY.js";
import "./chunk-LZH3KM55.js";
import "./chunk-Y3VUZTEO.js";
import "./chunk-QLVERXU5.js";
import "./chunk-OYHMC3VW.js";
import "./chunk-LWBFBP2R.js";
import "./chunk-DE4WNNDW.js";
import "./chunk-V2G6ITXO.js";
import "./chunk-YCZ3YGMG.js";
import "./chunk-F5UXFDUH.js";
import "./chunk-ZVVOIXUB.js";
import "./chunk-XRZYIZWV.js";
import "./chunk-2E7WBB45.js";
import "./chunk-MUHOVHES.js";
import "./chunk-T2PB4DNK.js";
import "./chunk-XEGQIGX5.js";
import "./chunk-AQF7QQD3.js";
import "./chunk-3TGJ2UPP.js";
import "./chunk-QEOWYB53.js";
import "./chunk-UZ6XBB6C.js";
import "./chunk-U373M5NZ.js";
import "./chunk-IOJX74IG.js";
import "./chunk-G525EIYN.js";
import "./chunk-HAADYJEF.js";
import "./chunk-DZNHJFU5.js";
import "./chunk-PH3VXGO4.js";
import "./chunk-FAVNHT4B.js";
import "./chunk-QIKOD3PZ.js";
import "./chunk-V4DR3IRU.js";
import "./chunk-HXWRQBIO.js";
import "./chunk-2CIJO3V3.js";
import "./chunk-OFBDYQC5.js";
import "./chunk-OC3SQ5HK.js";
import "./chunk-3VPP7LG4.js";
import "./chunk-2LSBKOGS.js";
import "./chunk-7OW24QWY.js";
import "./chunk-O2PTR6DB.js";
import "./chunk-SQPSG2HH.js";
import "./chunk-IWKIGZF6.js";
import "./chunk-6OSAHK2J.js";
import "./chunk-MTFDOOBS.js";
import "./chunk-Q3BUNRF4.js";
import "./chunk-3OXDSLPJ.js";
import "./chunk-5UJ7PIRT.js";
import "./chunk-PPP72TBL.js";
import {
  require_jsx_runtime
} from "./chunk-IL5HTOUB.js";
import "./chunk-EQCCHGRT.js";
import {
  require_react
} from "./chunk-JXI3EFM4.js";
import {
  __toESM
} from "./chunk-OS7ZSSJM.js";

// node_modules/thirdweb/dist/esm/react/web/wallets/in-app/InAppWalletConnectUI.js
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);

// node_modules/thirdweb/dist/esm/react/web/wallets/in-app/InAppWalletFormUI.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_react = __toESM(require_react(), 1);
function InAppWalletFormUIScreen(props) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k;
  const isCompact = props.size === "compact";
  const { initialScreen, screen } = useScreenContext();
  const [isApproved, setIsApproved] = (0, import_react.useState)(false);
  const isInitialScreen = screen === props.wallet && initialScreen === props.wallet;
  const onBack = isInitialScreen && !props.isLinking ? void 0 : props.goBack;
  return (0, import_jsx_runtime.jsxs)(Container, { fullHeight: true, flex: "column", p: "lg", animate: "fadein", style: {
    minHeight: "250px"
  }, children: [isCompact && (isInitialScreen ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [(0, import_jsx_runtime.jsx)(ModalHeader, { onBack, leftAligned: !props.isLinking, title: (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [!((_a = props.meta) == null ? void 0 : _a.titleIconUrl) ? null : (0, import_jsx_runtime.jsx)(Img, { src: (_b = props.meta) == null ? void 0 : _b.titleIconUrl, width: iconSize.md, height: iconSize.md, client: props.client }), (0, import_jsx_runtime.jsx)(ModalTitle, { children: ((_c = props.meta) == null ? void 0 : _c.title) ?? props.inAppWalletLocale.emailLoginScreen.title })] }) }), (0, import_jsx_runtime.jsx)(Spacer, { y: "lg" })] }) : (0, import_jsx_runtime.jsx)(ModalHeader, { onBack, title: props.inAppWalletLocale.signIn })), (0, import_jsx_runtime.jsx)(Container, { expand: true, flex: "column", center: "y", p: isCompact ? void 0 : "lg", children: (0, import_jsx_runtime.jsx)(ConnectWalletSocialOptions, { ...props, locale: props.inAppWalletLocale, disabled: ((_d = props.meta) == null ? void 0 : _d.requireApproval) && !isApproved }) }), isCompact && (((_e = props.meta) == null ? void 0 : _e.showThirdwebBranding) !== false || ((_f = props.meta) == null ? void 0 : _f.termsOfServiceUrl) || ((_g = props.meta) == null ? void 0 : _g.privacyPolicyUrl)) && (0, import_jsx_runtime.jsx)(Spacer, { y: "xl" }), (0, import_jsx_runtime.jsxs)(Container, { flex: "column", gap: "lg", children: [(0, import_jsx_runtime.jsx)(TOS, { termsOfServiceUrl: (_h = props.meta) == null ? void 0 : _h.termsOfServiceUrl, privacyPolicyUrl: (_i = props.meta) == null ? void 0 : _i.privacyPolicyUrl, locale: props.connectLocale.agreement, requireApproval: (_j = props.meta) == null ? void 0 : _j.requireApproval, onApprove: () => {
    setIsApproved(!isApproved);
  }, isApproved }), ((_k = props.meta) == null ? void 0 : _k.showThirdwebBranding) !== false && (0, import_jsx_runtime.jsx)(PoweredByThirdweb, {})] })] });
}

// node_modules/thirdweb/dist/esm/react/web/wallets/in-app/InAppWalletConnectUI.js
function InAppWalletConnectUI(props) {
  const data = useSelectionData();
  const setSelectionData = useSetSelectionData();
  const state = data;
  const localeId = props.connectLocale.id;
  const locale = useInAppWalletLocale(localeId);
  const { initialScreen } = useScreenContext();
  if (!locale) {
    return (0, import_jsx_runtime2.jsx)(LoadingScreen, {});
  }
  const goBackToMain = () => {
    var _a;
    if (initialScreen === props.wallet) {
      setSelectionData({});
    } else {
      (_a = props.goBack) == null ? void 0 : _a.call(props);
      setSelectionData({});
    }
  };
  const done = () => {
    props.done();
    setSelectionData({});
  };
  const otpUserInfo = (state == null ? void 0 : state.emailLogin) ? { email: state.emailLogin } : (state == null ? void 0 : state.phoneLogin) ? { phone: state.phoneLogin } : void 0;
  if (otpUserInfo) {
    return (0, import_jsx_runtime2.jsx)(OTPLoginUI, { userInfo: otpUserInfo, locale, done, goBack: goBackToMain, wallet: props.wallet, chain: props.chain, client: props.client, size: props.size, isLinking: props.isLinking });
  }
  if (state == null ? void 0 : state.passkeyLogin) {
    return (0, import_jsx_runtime2.jsx)(PassKeyLogin, { locale: props.connectLocale, wallet: props.wallet, done, onBack: goBackToMain, chain: props.chain, client: props.client, size: props.size, isLinking: props.isLinking });
  }
  if (state == null ? void 0 : state.walletLogin) {
    return (0, import_jsx_runtime2.jsx)(WalletAuth, { meta: props.meta, inAppLocale: locale, walletConnect: props.walletConnect, wallet: props.wallet, client: props.client, size: props.size, chain: props.chain, done, onBack: goBackToMain || (() => setSelectionData({})), locale: props.connectLocale, isLinking: state.walletLogin.linking });
  }
  if (state == null ? void 0 : state.socialLogin) {
    return (0, import_jsx_runtime2.jsx)(SocialLogin, { socialAuth: state.socialLogin.type, locale, done, goBack: goBackToMain, wallet: props.wallet, state, chain: props.chain, client: props.client, size: props.size, connectLocale: props.connectLocale, isLinking: props.isLinking });
  }
  if (state == null ? void 0 : state.guestLogin) {
    return (0, import_jsx_runtime2.jsx)(GuestLogin, { locale, done, goBack: goBackToMain, wallet: props.wallet, state, client: props.client, size: props.size, connectLocale: props.connectLocale });
  }
  return (0, import_jsx_runtime2.jsx)(InAppWalletFormUIScreen, { select: () => {
  }, connectLocale: props.connectLocale, inAppWalletLocale: locale, done, goBack: props.goBack, wallet: props.wallet, client: props.client, meta: props.meta, size: props.size, chain: props.chain, isLinking: props.isLinking });
}
var InAppWalletConnectUI_default = InAppWalletConnectUI;
export {
  InAppWalletConnectUI_default as default
};
//# sourceMappingURL=InAppWalletConnectUI-VXZFP4CH.js.map
