{
  "version": 3,
  "sources": ["../../thirdweb/src/insight/common.ts"],
  "sourcesContent": ["import type { Chain } from \"../chains/types.js\";\nimport { getChainServices } from \"../chains/utils.js\";\n\nexport async function assertInsightEnabled(chains: Chain[]) {\n  const chainData = await Promise.all(\n    chains.map((chain) =>\n      getChainServices(chain).then((services) => ({\n        chain,\n        enabled: services.some((c) => c.service === \"insight\" && c.enabled),\n      })),\n    ),\n  );\n\n  const insightEnabled = chainData.every((c) => c.enabled);\n\n  if (!insightEnabled) {\n    throw new Error(\n      `Insight is not available for chains ${chainData\n        .filter((c) => !c.enabled)\n        .map((c) => c.chain.id)\n        .join(\", \")}`,\n    );\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;AAGA,eAAsB,qBAAqB,QAAe;AACxD,QAAM,YAAY,MAAM,QAAQ,IAC9B,OAAO,IAAI,CAAC,UACV,iBAAiB,KAAK,EAAE,KAAK,CAAC,cAAc;IAC1C;IACA,SAAS,SAAS,KAAK,CAAC,MAAM,EAAE,YAAY,aAAa,EAAE,OAAO;IAClE,CAAC,CACJ;AAGH,QAAM,iBAAiB,UAAU,MAAM,CAAC,MAAM,EAAE,OAAO;AAEvD,MAAI,CAAC,gBAAgB;AACnB,UAAM,IAAI,MACR,uCAAuC,UACpC,OAAO,CAAC,MAAM,CAAC,EAAE,OAAO,EACxB,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,EACrB,KAAK,IAAI,CAAC,EAAE;EAEnB;AACF;",
  "names": []
}
