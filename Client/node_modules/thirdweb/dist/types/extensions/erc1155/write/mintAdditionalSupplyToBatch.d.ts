import type { BaseTransactionOptions, WithOverrides } from "../../../transaction/types.js";
import type { MintAdditionalSupplyToParams } from "./mintAdditionalSupplyTo.js";
/**
 * @extension ERC1155
 */
export type MintAdditionalSupplyToBatchParams = WithOverrides<{
    nfts: MintAdditionalSupplyToParams[];
}>;
/**
 * This extension batches multiple `mintAdditionalSupplyToBatch` extensions into one single multicall.
 * Keep in mind that there is a limit of how many NFTs you can mint per transaction.
 * This limit varies depends on the network that you are transacting on.
 *
 * You are recommended to experiment with the number to figure out the best number for your chain of choice.
 * @extension ERC1155
 * @example
 * ```ts
 * import { mintAdditionalSupplyToBatch } from "thirdweb/extensions/erc1155";
 *
 * const transaction = mintAdditionalSupplyToBatch({
 *   contract,
 *   nfts: [
 *     { tokenId: 0n, supply: 99n, to: account.address },
 *     { tokenId: 1n, supply: 98n, to: account.address },
 *     { tokenId: 2n, supply: 97n, to: account.address },
 *   ],
 * });
 * ```
 */
export declare function mintAdditionalSupplyToBatch(options: BaseTransactionOptions<MintAdditionalSupplyToBatchParams>): import("../../../transaction/prepare-transaction.js").PreparedTransaction<any, import("abitype").AbiFunction, import("../../../transaction/prepare-transaction.js").PrepareTransactionOptions>;
/**
 * Optimization
 *
 * We can batch the records that share the same "to" & "tokenId" into 1 transaction
 *
 * For example, this struct:
 * [
 *   { tokenId: 0n, supply: 99n, to: account.address },
 *   { tokenId: 1n, supply: 49n, to: account.address },
 *   { tokenId: 1n, supply: 51n, to: account.address },
 * ]
 *
 * ...can be packed into:
 * [
 *   { tokenId: 0n, supply: 99n, to: account.address },
 *   { tokenId: 1n, supply: 100n, to: account.address },
 * ]
 * @internal
 */
export declare function optimizeMintBatchContent(nfts: MintAdditionalSupplyToParams[]): MintAdditionalSupplyToParams[];
//# sourceMappingURL=mintAdditionalSupplyToBatch.d.ts.map