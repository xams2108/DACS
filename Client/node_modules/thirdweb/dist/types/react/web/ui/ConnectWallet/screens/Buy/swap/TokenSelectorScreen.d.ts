import type { Chain } from "../../../../../../../chains/types.js";
import type { ThirdwebClient } from "../../../../../../../client/client.js";
import type { Wallet } from "../../../../../../../wallets/interfaces/wallet.js";
import type { WalletId } from "../../../../../../../wallets/wallet-types.js";
import type { PayUIOptions } from "../../../../../../core/hooks/connection/ConnectButtonProps.js";
import type { SupportedTokens, TokenInfo } from "../../../../../../core/utils/defaultTokens.js";
import { type ERC20OrNativeToken } from "../../nativeToken.js";
export declare function TokenSelectorScreen(props: {
    client: ThirdwebClient;
    sourceTokens: SupportedTokens | undefined;
    sourceSupportedTokens: SupportedTokens | undefined;
    toChain: Chain;
    toToken: ERC20OrNativeToken;
    tokenAmount: string;
    mode: PayUIOptions["mode"];
    hiddenWallets?: WalletId[];
    onSelectToken: (wallet: Wallet, token: TokenInfo, chain: Chain) => void;
    onConnect: () => void;
    onPayWithFiat: () => void;
    fiatSupported: boolean;
}): import("react/jsx-runtime.js").JSX.Element;
//# sourceMappingURL=TokenSelectorScreen.d.ts.map