import type { ThirdwebClient } from "../../../client/client.js";
import type { Ecosystem } from "../../../wallets/in-app/core/wallet/types.js";
/**
 * Embeds another thirdweb-supported site for seamless in-app and ecosystem wallet connection.
 *
 *  Make sure the embedded site includes <AutoConnect /> and supports frame ancestors, see [here](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-ancestors) for more information.
 *
 *  The embedded site must support the connected wallet (ecosystem or in-app).
 *
 * @param {Object} props - The props to pass to the iframe
 * @param {String} props.src - The URL of the site to embed
 * @param {ThirdwebClient} props.client - The current site's thirdweb client
 * @param {Ecosystem} [props.ecosystem] - The ecosystem to use for the wallet connection in the embedded site
 *
 * @example
 * ```tsx
 * import { SiteEmbed } from "thirdweb/react";
 *
 * <SiteEmbed src="https://thirdweb.com" client={thirdwebClient} ecosystem={{ id: "ecosystem.thirdweb" }} />
 * ```
 * @walletConnection
 */
export declare function SiteEmbed({ src, client, ecosystem, ...props }: {
    src: string;
    client: ThirdwebClient;
    ecosystem?: Ecosystem;
} & React.DetailedHTMLProps<React.IframeHTMLAttributes<HTMLIFrameElement>, HTMLIFrameElement>): import("react/jsx-runtime.js").JSX.Element;
//# sourceMappingURL=SiteEmbed.d.ts.map