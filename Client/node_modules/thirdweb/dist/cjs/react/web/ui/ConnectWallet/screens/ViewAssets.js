"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ViewAssets = ViewAssets;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const index_js_1 = require("../../../../core/design-system/index.js");
const Spacer_js_1 = require("../../components/Spacer.js");
const Tabs_js_1 = require("../../components/Tabs.js");
const basic_js_1 = require("../../components/basic.js");
const CoinsIcon_js_1 = require("../icons/CoinsIcon.js");
const ImageIcon_js_1 = require("../icons/ImageIcon.js");
const ViewNFTs_js_1 = require("./ViewNFTs.js");
const ViewTokens_js_1 = require("./ViewTokens.js");
const TokenTab = {
    label: ((0, jsx_runtime_1.jsxs)("span", { className: "flex gap-2", children: [(0, jsx_runtime_1.jsx)(CoinsIcon_js_1.CoinsIcon, { size: index_js_1.iconSize.sm }), " Tokens"] })),
    value: "Tokens",
};
const NftTab = {
    label: ((0, jsx_runtime_1.jsxs)("span", { className: "flex gap-2", children: [(0, jsx_runtime_1.jsx)(ImageIcon_js_1.ImageIcon, { size: index_js_1.iconSize.sm }), " NFTs"] })),
    value: "NFTs",
};
/**
 * @internal
 */
function ViewAssets(props) {
    const { connectLocale } = props;
    const options = (0, react_1.useMemo)(() => {
        if (!props.assetTabs) {
            return [TokenTab, NftTab];
        }
        if (!props.assetTabs.length) {
            return [];
        }
        const tabs = [];
        for (const item of props.assetTabs) {
            if (item === "token") {
                tabs.push(TokenTab);
            }
            else if (item === "nft") {
                tabs.push(NftTab);
            }
        }
        return tabs;
    }, [props.assetTabs]);
    // Since `options` is now a dynamic value, the default active tab is set to the value of the first tab in `options`
    const [activeTab, setActiveTab] = (0, react_1.useState)(options[0]?.value || "Tokens");
    return ((0, jsx_runtime_1.jsxs)(basic_js_1.Container, { animate: "fadein", style: {
            minHeight: "300px",
        }, children: [(0, jsx_runtime_1.jsx)(basic_js_1.Container, { p: "lg", children: (0, jsx_runtime_1.jsx)(basic_js_1.ModalHeader, { title: connectLocale.viewFunds.viewAssets, onBack: props.onBack }) }), (0, jsx_runtime_1.jsx)(basic_js_1.Line, {}), (0, jsx_runtime_1.jsxs)(basic_js_1.Container, { px: "lg", scrollY: true, style: {
                    minHeight: "330px",
                }, children: [(0, jsx_runtime_1.jsx)(Spacer_js_1.Spacer, { y: "md" }), (0, jsx_runtime_1.jsx)(Tabs_js_1.default, { options: options, selected: activeTab, onSelect: setActiveTab, children: (0, jsx_runtime_1.jsxs)(basic_js_1.Container, { scrollY: true, style: {
                                maxHeight: "300px",
                            }, children: [activeTab === "Tokens" && ((0, jsx_runtime_1.jsx)(ViewTokens_js_1.ViewTokensContent, { client: props.client, connectLocale: connectLocale, supportedTokens: props.supportedTokens })), activeTab === "NFTs" && ((0, jsx_runtime_1.jsx)(ViewNFTs_js_1.ViewNFTsContent, { supportedNFTs: props.supportedNFTs, client: props.client, theme: props.theme, connectLocale: connectLocale }))] }) }), (0, jsx_runtime_1.jsx)(Spacer_js_1.Spacer, { y: "lg" })] })] }));
}
//# sourceMappingURL=ViewAssets.js.map