"use strict";
"use client";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Blobbie = Blobbie;
const jsx_runtime_1 = require("react/jsx-runtime");
const utils_1 = require("@noble/curves/abstract/utils");
const react_1 = require("react");
const account_js_1 = require("../../../core/utils/account.js");
/**
 * A unique gradient avatar based on the provided address.
 * @param props The component props.
 * @param props.address The address to generate the gradient with.
 * @param props.style The CSS style for the component - excluding `backgroundImage`
 * @param props.className The className for the component
 * @param props.size The size of each side of the square avatar (in pixels). This prop will override the `width` and `height` attributes from the `style` prop.
 * @component
 * @wallet
 * @example
 * ```tsx
 * import { Blobbie } from "thirdweb/react";
 *
 * <Blobbie address="0x...." className="w-10 h-10" />
 * ```
 */
function Blobbie(props) {
    const id = (0, react_1.useId)();
    const colors = (0, react_1.useMemo)(() => account_js_1.COLOR_OPTIONS[Number((0, utils_1.hexToNumber)(props.address.slice(2, 4))) % account_js_1.COLOR_OPTIONS.length], [props.address]);
    return ((0, jsx_runtime_1.jsx)("div", { id: id, style: {
            ...props.style,
            backgroundImage: `radial-gradient(ellipse at left bottom, ${colors[0]}, ${colors[1]})`,
            ...(props.size
                ? {
                    width: `${props.size}px`,
                    height: `${props.size}px`,
                }
                : undefined),
        }, className: props.className }));
}
//# sourceMappingURL=Blobbie.js.map