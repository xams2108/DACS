"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.signTypedData = signTypedData;
const domains_js_1 = require("../../../../utils/domains.js");
const fetch_js_1 = require("../../../../utils/fetch.js");
const json_js_1 = require("../../../../utils/json.js");
async function signTypedData({ client, payload, storage, }) {
    const authToken = await storage.getAuthCookie();
    const ecosystem = storage.ecosystem;
    const clientFetch = (0, fetch_js_1.getClientFetch)(client, ecosystem);
    if (!authToken) {
        throw new Error("No auth token found when signing typed data");
    }
    const response = await clientFetch(`${(0, domains_js_1.getThirdwebBaseUrl)("inAppWallet")}/api/v1/enclave-wallet/sign-typed-data`, {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
            "x-thirdweb-client-id": client.clientId,
            Authorization: `Bearer embedded-wallet-token:${authToken}`,
        },
        body: (0, json_js_1.stringify)({
            ...payload,
        }),
    });
    if (!response.ok) {
        throw new Error(`Failed to sign typed data - ${response.status} ${response.statusText}`);
    }
    const signedTypedData = (await response.json());
    return signedTypedData;
}
//# sourceMappingURL=sign-typed-data.enclave.js.map