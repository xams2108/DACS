import { getGasPrice } from "../gas/get-gas-price.js";
import { estimateGasCost } from "./actions/estimate-gas-cost.js";
/**
 * @internal
 */
export function isAbiFunction(item) {
    return !!(item &&
        typeof item === "object" &&
        "type" in item &&
        item.type === "function");
}
export async function getTransactionGasCost(tx, from) {
    try {
        const gasCost = await estimateGasCost({
            transaction: tx,
            from,
        });
        const bufferCost = gasCost.wei / 10n;
        // Note: get tx.value AFTER estimateGasCost
        // add 10% extra gas cost to the estimate to ensure user buys enough to cover the tx cost
        return gasCost.wei + bufferCost;
    }
    catch {
        if (from) {
            // try again without passing from
            return await getTransactionGasCost(tx);
        }
        // fallback if both fail, use the tx value + 1M * gas price
        const gasPrice = await getGasPrice({
            client: tx.client,
            chain: tx.chain,
        });
        return 1000000n * gasPrice;
    }
}
//# sourceMappingURL=utils.js.map